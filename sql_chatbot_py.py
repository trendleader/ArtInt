{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNe2aH2365Mx3DW2u/IY+J1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/trendleader/ArtInt/blob/main/sql_chatbot_py.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%pip install chainlit"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "jKgmQDzPTDI4",
        "outputId": "b66013e7-9693-49f2-d69d-c194f2f83372"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting chainlit\n",
            "  Downloading chainlit-2.6.9-py3-none-any.whl.metadata (6.4 kB)\n",
            "Requirement already satisfied: aiofiles<25.0.0,>=23.1.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (24.1.0)\n",
            "Collecting asyncer<0.0.9,>=0.0.8 (from chainlit)\n",
            "  Downloading asyncer-0.0.8-py3-none-any.whl.metadata (6.7 kB)\n",
            "Requirement already satisfied: click<9.0.0,>=8.1.3 in /usr/local/lib/python3.11/dist-packages (from chainlit) (8.2.1)\n",
            "Collecting dataclasses_json<0.7.0,>=0.6.7 (from chainlit)\n",
            "  Downloading dataclasses_json-0.6.7-py3-none-any.whl.metadata (25 kB)\n",
            "Requirement already satisfied: fastapi<0.117,>=0.116.1 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.116.1)\n",
            "Collecting filetype<2.0.0,>=1.2.0 (from chainlit)\n",
            "  Downloading filetype-1.2.0-py2.py3-none-any.whl.metadata (6.5 kB)\n",
            "Requirement already satisfied: httpx>=0.23.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.28.1)\n",
            "Collecting lazify<0.5.0,>=0.4.0 (from chainlit)\n",
            "  Downloading Lazify-0.4.0-py2.py3-none-any.whl.metadata (1.4 kB)\n",
            "Collecting literalai==0.1.201 (from chainlit)\n",
            "  Downloading literalai-0.1.201.tar.gz (67 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.8/67.8 kB\u001b[0m \u001b[31m2.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting mcp<2.0.0,>=1.11.0 (from chainlit)\n",
            "  Downloading mcp-1.13.0-py3-none-any.whl.metadata (68 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m68.7/68.7 kB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: nest-asyncio<2.0.0,>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (1.6.0)\n",
            "Requirement already satisfied: packaging>=23.1 in /usr/local/lib/python3.11/dist-packages (from chainlit) (25.0)\n",
            "Requirement already satisfied: pydantic<3,>=2.7.2 in /usr/local/lib/python3.11/dist-packages (from chainlit) (2.11.7)\n",
            "Requirement already satisfied: pyjwt<3.0.0,>=2.8.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (2.10.1)\n",
            "Collecting python-dotenv<2.0.0,>=1.0.0 (from chainlit)\n",
            "  Downloading python_dotenv-1.1.1-py3-none-any.whl.metadata (24 kB)\n",
            "Collecting python-multipart<0.0.19,>=0.0.18 (from chainlit)\n",
            "  Downloading python_multipart-0.0.18-py3-none-any.whl.metadata (1.8 kB)\n",
            "Collecting python-socketio<6.0.0,>=5.11.0 (from chainlit)\n",
            "  Downloading python_socketio-5.13.0-py3-none-any.whl.metadata (3.2 kB)\n",
            "Requirement already satisfied: starlette>=0.47.2 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.47.2)\n",
            "Collecting syncer<3.0.0,>=2.0.3 (from chainlit)\n",
            "  Downloading syncer-2.0.3.tar.gz (11 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting tomli<3.0.0,>=2.0.1 (from chainlit)\n",
            "  Downloading tomli-2.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\n",
            "Requirement already satisfied: uvicorn>=0.35.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.35.0)\n",
            "Collecting watchfiles<0.21.0,>=0.20.0 (from chainlit)\n",
            "  Downloading watchfiles-0.20.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.9 kB)\n",
            "Collecting chevron>=0.14.0 (from literalai==0.1.201->chainlit)\n",
            "  Downloading chevron-0.14.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "Collecting traceloop-sdk>=0.33.12 (from literalai==0.1.201->chainlit)\n",
            "  Downloading traceloop_sdk-0.45.4-py3-none-any.whl.metadata (4.1 kB)\n",
            "Requirement already satisfied: anyio<5.0,>=3.4.0 in /usr/local/lib/python3.11/dist-packages (from asyncer<0.0.9,>=0.0.8->chainlit) (4.10.0)\n",
            "Collecting marshmallow<4.0.0,>=3.18.0 (from dataclasses_json<0.7.0,>=0.6.7->chainlit)\n",
            "  Downloading marshmallow-3.26.1-py3-none-any.whl.metadata (7.3 kB)\n",
            "Collecting typing-inspect<1,>=0.4.0 (from dataclasses_json<0.7.0,>=0.6.7->chainlit)\n",
            "  Downloading typing_inspect-0.9.0-py3-none-any.whl.metadata (1.5 kB)\n",
            "Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.11/dist-packages (from fastapi<0.117,>=0.116.1->chainlit) (4.14.1)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.11/dist-packages (from httpx>=0.23.0->chainlit) (2025.8.3)\n",
            "Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.11/dist-packages (from httpx>=0.23.0->chainlit) (1.0.9)\n",
            "Requirement already satisfied: idna in /usr/local/lib/python3.11/dist-packages (from httpx>=0.23.0->chainlit) (3.10)\n",
            "Requirement already satisfied: h11>=0.16 in /usr/local/lib/python3.11/dist-packages (from httpcore==1.*->httpx>=0.23.0->chainlit) (0.16.0)\n",
            "Collecting httpx-sse>=0.4 (from mcp<2.0.0,>=1.11.0->chainlit)\n",
            "  Downloading httpx_sse-0.4.1-py3-none-any.whl.metadata (9.4 kB)\n",
            "Requirement already satisfied: jsonschema>=4.20.0 in /usr/local/lib/python3.11/dist-packages (from mcp<2.0.0,>=1.11.0->chainlit) (4.25.0)\n",
            "Collecting pydantic-settings>=2.5.2 (from mcp<2.0.0,>=1.11.0->chainlit)\n",
            "  Downloading pydantic_settings-2.10.1-py3-none-any.whl.metadata (3.4 kB)\n",
            "Collecting sse-starlette>=1.6.1 (from mcp<2.0.0,>=1.11.0->chainlit)\n",
            "  Downloading sse_starlette-3.0.2-py3-none-any.whl.metadata (11 kB)\n",
            "Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=2.7.2->chainlit) (0.7.0)\n",
            "Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=2.7.2->chainlit) (2.33.2)\n",
            "Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=2.7.2->chainlit) (0.4.1)\n",
            "Collecting bidict>=0.21.0 (from python-socketio<6.0.0,>=5.11.0->chainlit)\n",
            "  Downloading bidict-0.23.1-py3-none-any.whl.metadata (8.7 kB)\n",
            "Collecting python-engineio>=4.11.0 (from python-socketio<6.0.0,>=5.11.0->chainlit)\n",
            "  Downloading python_engineio-4.12.2-py3-none-any.whl.metadata (2.2 kB)\n",
            "Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio<5.0,>=3.4.0->asyncer<0.0.9,>=0.0.8->chainlit) (1.3.1)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=4.20.0->mcp<2.0.0,>=1.11.0->chainlit) (25.3.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=4.20.0->mcp<2.0.0,>=1.11.0->chainlit) (2025.4.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=4.20.0->mcp<2.0.0,>=1.11.0->chainlit) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=4.20.0->mcp<2.0.0,>=1.11.0->chainlit) (0.27.0)\n",
            "Collecting simple-websocket>=0.10.0 (from python-engineio>=4.11.0->python-socketio<6.0.0,>=5.11.0->chainlit)\n",
            "  Downloading simple_websocket-1.1.0-py3-none-any.whl.metadata (1.5 kB)\n",
            "Requirement already satisfied: aiohttp<4.0.0,>=3.11.11 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (3.12.15)\n",
            "Collecting colorama<0.5.0,>=0.4.6 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading colorama-0.4.6-py2.py3-none-any.whl.metadata (17 kB)\n",
            "Collecting deprecated<2.0.0,>=1.2.14 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading Deprecated-1.2.18-py2.py3-none-any.whl.metadata (5.7 kB)\n",
            "Requirement already satisfied: jinja2<4.0.0,>=3.1.5 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (3.1.6)\n",
            "Collecting opentelemetry-api<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_api-1.36.0-py3-none-any.whl.metadata (1.5 kB)\n",
            "Collecting opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_exporter_otlp_proto_grpc-1.36.0-py3-none-any.whl.metadata (2.4 kB)\n",
            "Collecting opentelemetry-exporter-otlp-proto-http<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_exporter_otlp_proto_http-1.36.0-py3-none-any.whl.metadata (2.3 kB)\n",
            "Collecting opentelemetry-instrumentation-alephalpha==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_alephalpha-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-anthropic==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_anthropic-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-bedrock==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_bedrock-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-chromadb==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_chromadb-0.45.4-py3-none-any.whl.metadata (1.6 kB)\n",
            "Collecting opentelemetry-instrumentation-cohere==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_cohere-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-crewai==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_crewai-0.45.4-py3-none-any.whl.metadata (2.1 kB)\n",
            "Collecting opentelemetry-instrumentation-google-generativeai==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_google_generativeai-0.45.4-py3-none-any.whl.metadata (2.3 kB)\n",
            "Collecting opentelemetry-instrumentation-groq==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_groq-0.45.4-py3-none-any.whl.metadata (2.1 kB)\n",
            "Collecting opentelemetry-instrumentation-haystack==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_haystack-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-lancedb==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_lancedb-0.45.4-py3-none-any.whl.metadata (1.6 kB)\n",
            "Collecting opentelemetry-instrumentation-langchain==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_langchain-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-llamaindex==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_llamaindex-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-logging>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_logging-0.57b0-py3-none-any.whl.metadata (1.8 kB)\n",
            "Collecting opentelemetry-instrumentation-marqo==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_marqo-0.45.4-py3-none-any.whl.metadata (1.6 kB)\n",
            "Collecting opentelemetry-instrumentation-mcp==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_mcp-0.45.4-py3-none-any.whl.metadata (2.1 kB)\n",
            "Collecting opentelemetry-instrumentation-milvus==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_milvus-0.45.4-py3-none-any.whl.metadata (1.6 kB)\n",
            "Collecting opentelemetry-instrumentation-mistralai==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_mistralai-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-ollama==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_ollama-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-openai==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_openai-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-openai-agents==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_openai_agents-0.45.4-py3-none-any.whl.metadata (2.3 kB)\n",
            "Collecting opentelemetry-instrumentation-pinecone==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_pinecone-0.45.4-py3-none-any.whl.metadata (1.6 kB)\n",
            "Collecting opentelemetry-instrumentation-qdrant==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_qdrant-0.45.4-py3-none-any.whl.metadata (1.6 kB)\n",
            "Collecting opentelemetry-instrumentation-redis>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.57b0-py3-none-any.whl.metadata (2.0 kB)\n",
            "Collecting opentelemetry-instrumentation-replicate==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_replicate-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-requests>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.57b0-py3-none-any.whl.metadata (2.6 kB)\n",
            "Collecting opentelemetry-instrumentation-sagemaker==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_sagemaker-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-sqlalchemy>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.57b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-threading>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.57b0-py3-none-any.whl.metadata (2.1 kB)\n",
            "Collecting opentelemetry-instrumentation-together==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_together-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-transformers==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_transformers-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-urllib3>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.57b0-py3-none-any.whl.metadata (4.2 kB)\n",
            "Collecting opentelemetry-instrumentation-vertexai==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_vertexai-0.45.4-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting opentelemetry-instrumentation-watsonx==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_watsonx-0.45.4-py3-none-any.whl.metadata (2.5 kB)\n",
            "Collecting opentelemetry-instrumentation-weaviate==0.45.4 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_weaviate-0.45.4-py3-none-any.whl.metadata (1.6 kB)\n",
            "Collecting opentelemetry-sdk<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_sdk-1.36.0-py3-none-any.whl.metadata (1.5 kB)\n",
            "Collecting opentelemetry-semantic-conventions-ai<0.5.0,>=0.4.12 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_semantic_conventions_ai-0.4.12-py3-none-any.whl.metadata (1.2 kB)\n",
            "Collecting posthog<4,>3.0.2 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading posthog-3.25.0-py2.py3-none-any.whl.metadata (3.0 kB)\n",
            "Requirement already satisfied: tenacity<10.0,>=8.2.3 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (9.1.2)\n",
            "Collecting opentelemetry-instrumentation>=0.50b0 (from opentelemetry-instrumentation-alephalpha==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation-0.57b0-py3-none-any.whl.metadata (6.7 kB)\n",
            "Collecting opentelemetry-semantic-conventions>=0.50b0 (from opentelemetry-instrumentation-alephalpha==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_semantic_conventions-0.57b0-py3-none-any.whl.metadata (2.4 kB)\n",
            "Collecting anthropic>=0.17.0 (from opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading anthropic-0.64.0-py3-none-any.whl.metadata (27 kB)\n",
            "Requirement already satisfied: tokenizers>=0.13.0 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.21.4)\n",
            "Collecting inflection<0.6.0,>=0.5.1 (from opentelemetry-instrumentation-llamaindex==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading inflection-0.5.1-py2.py3-none-any.whl.metadata (1.7 kB)\n",
            "Collecting opentelemetry-exporter-otlp==1.34.1 (from opentelemetry-instrumentation-mcp==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_exporter_otlp-1.34.1-py3-none-any.whl.metadata (2.4 kB)\n",
            "Collecting opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_exporter_otlp_proto_grpc-1.34.1-py3-none-any.whl.metadata (2.4 kB)\n",
            "Collecting opentelemetry-exporter-otlp-proto-http<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_exporter_otlp_proto_http-1.34.1-py3-none-any.whl.metadata (2.3 kB)\n",
            "Requirement already satisfied: googleapis-common-protos~=1.52 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.70.0)\n",
            "Requirement already satisfied: grpcio<2.0.0,>=1.63.2 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.74.0)\n",
            "Collecting opentelemetry-exporter-otlp-proto-common==1.34.1 (from opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_exporter_otlp_proto_common-1.34.1-py3-none-any.whl.metadata (1.9 kB)\n",
            "Collecting opentelemetry-proto==1.34.1 (from opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_proto-1.34.1-py3-none-any.whl.metadata (2.4 kB)\n",
            "Collecting opentelemetry-sdk<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_sdk-1.34.1-py3-none-any.whl.metadata (1.6 kB)\n",
            "Requirement already satisfied: requests~=2.7 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-exporter-otlp-proto-http<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (2.32.3)\n",
            "Requirement already satisfied: protobuf<6.0,>=5.0 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-proto==1.34.1->opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (5.29.5)\n",
            "Collecting mypy-extensions>=0.3.0 (from typing-inspect<1,>=0.4.0->dataclasses_json<0.7.0,>=0.6.7->chainlit)\n",
            "  Downloading mypy_extensions-1.1.0-py3-none-any.whl.metadata (1.1 kB)\n",
            "Requirement already satisfied: aiohappyeyeballs>=2.5.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.11.11->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (2.6.1)\n",
            "Requirement already satisfied: aiosignal>=1.4.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.11.11->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.4.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.11.11->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.7.0)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.11.11->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (6.6.4)\n",
            "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.11.11->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.3.2)\n",
            "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.11.11->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.20.1)\n",
            "Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.11/dist-packages (from deprecated<2.0.0,>=1.2.14->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.17.3)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2<4.0.0,>=3.1.5->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (3.0.2)\n",
            "Requirement already satisfied: importlib-metadata<8.8.0,>=6.0 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-api<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (8.7.0)\n",
            "Collecting opentelemetry-util-http==0.57b0 (from opentelemetry-instrumentation-requests>=0.50b0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_util_http-0.57b0-py3-none-any.whl.metadata (2.6 kB)\n",
            "INFO: pip is looking at multiple versions of opentelemetry-sdk to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting opentelemetry-instrumentation-urllib3>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.56b0-py3-none-any.whl.metadata (4.2 kB)\n",
            "INFO: pip is looking at multiple versions of opentelemetry-instrumentation-urllib3 to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.55b1-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.55b0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.54b1-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.54b0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.53b1-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.53b0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.52b1-py3-none-any.whl.metadata (4.2 kB)\n",
            "INFO: pip is still looking at multiple versions of opentelemetry-instrumentation-urllib3 to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.52b0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.51b0-py3-none-any.whl.metadata (3.5 kB)\n",
            "  Downloading opentelemetry_instrumentation_urllib3-0.50b0-py3-none-any.whl.metadata (3.4 kB)\n",
            "Collecting opentelemetry-instrumentation-threading>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.56b0-py3-none-any.whl.metadata (2.1 kB)\n",
            "INFO: pip is looking at multiple versions of opentelemetry-instrumentation-threading to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_threading-0.55b1-py3-none-any.whl.metadata (2.1 kB)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.55b0-py3-none-any.whl.metadata (2.1 kB)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.54b1-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.54b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.53b1-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.53b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.52b1-py3-none-any.whl.metadata (2.2 kB)\n",
            "INFO: pip is still looking at multiple versions of opentelemetry-instrumentation-threading to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_threading-0.52b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.51b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_threading-0.50b0-py3-none-any.whl.metadata (2.0 kB)\n",
            "Collecting opentelemetry-instrumentation-sqlalchemy>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.56b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "INFO: pip is looking at multiple versions of opentelemetry-instrumentation-sqlalchemy to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.55b1-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.55b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.54b1-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.54b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.53b1-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.53b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.52b1-py3-none-any.whl.metadata (2.2 kB)\n",
            "INFO: pip is still looking at multiple versions of opentelemetry-instrumentation-sqlalchemy to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.52b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.51b0-py3-none-any.whl.metadata (2.2 kB)\n",
            "  Downloading opentelemetry_instrumentation_sqlalchemy-0.50b0-py3-none-any.whl.metadata (2.1 kB)\n",
            "Collecting opentelemetry-instrumentation-requests>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.56b0-py3-none-any.whl.metadata (2.6 kB)\n",
            "INFO: pip is looking at multiple versions of opentelemetry-instrumentation-requests to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_requests-0.55b1-py3-none-any.whl.metadata (2.6 kB)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.55b0-py3-none-any.whl.metadata (2.6 kB)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.54b1-py3-none-any.whl.metadata (2.7 kB)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.54b0-py3-none-any.whl.metadata (2.7 kB)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.53b1-py3-none-any.whl.metadata (2.7 kB)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.53b0-py3-none-any.whl.metadata (2.7 kB)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.52b1-py3-none-any.whl.metadata (2.7 kB)\n",
            "INFO: pip is still looking at multiple versions of opentelemetry-instrumentation-requests to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_requests-0.52b0-py3-none-any.whl.metadata (2.7 kB)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.51b0-py3-none-any.whl.metadata (2.7 kB)\n",
            "  Downloading opentelemetry_instrumentation_requests-0.50b0-py3-none-any.whl.metadata (2.5 kB)\n",
            "Collecting opentelemetry-instrumentation-redis>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.56b0-py3-none-any.whl.metadata (2.0 kB)\n",
            "INFO: pip is looking at multiple versions of opentelemetry-instrumentation-redis to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_redis-0.55b1-py3-none-any.whl.metadata (2.0 kB)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.55b0-py3-none-any.whl.metadata (2.0 kB)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.54b1-py3-none-any.whl.metadata (2.1 kB)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.54b0-py3-none-any.whl.metadata (2.1 kB)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.53b1-py3-none-any.whl.metadata (2.1 kB)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.53b0-py3-none-any.whl.metadata (2.1 kB)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.52b1-py3-none-any.whl.metadata (2.1 kB)\n",
            "INFO: pip is still looking at multiple versions of opentelemetry-instrumentation-redis to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading opentelemetry_instrumentation_redis-0.52b0-py3-none-any.whl.metadata (2.1 kB)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.51b0-py3-none-any.whl.metadata (2.1 kB)\n",
            "  Downloading opentelemetry_instrumentation_redis-0.50b0-py3-none-any.whl.metadata (1.9 kB)\n",
            "Collecting opentelemetry-instrumentation-logging>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_logging-0.56b0-py3-none-any.whl.metadata (1.8 kB)\n",
            "Collecting opentelemetry-instrumentation>=0.50b0 (from opentelemetry-instrumentation-alephalpha==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation-0.56b0-py3-none-any.whl.metadata (6.7 kB)\n",
            "Collecting opentelemetry-semantic-conventions>=0.50b0 (from opentelemetry-instrumentation-alephalpha==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_semantic_conventions-0.56b0-py3-none-any.whl.metadata (2.4 kB)\n",
            "Collecting opentelemetry-api<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_api-1.35.0-py3-none-any.whl.metadata (1.5 kB)\n",
            "Collecting opentelemetry-util-http==0.56b0 (from opentelemetry-instrumentation-requests>=0.50b0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_util_http-0.56b0-py3-none-any.whl.metadata (2.6 kB)\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "Collecting opentelemetry-instrumentation-logging>=0.50b0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation_logging-0.55b1-py3-none-any.whl.metadata (1.8 kB)\n",
            "Collecting opentelemetry-instrumentation>=0.50b0 (from opentelemetry-instrumentation-alephalpha==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_instrumentation-0.55b1-py3-none-any.whl.metadata (6.7 kB)\n",
            "Collecting opentelemetry-semantic-conventions>=0.50b0 (from opentelemetry-instrumentation-alephalpha==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_semantic_conventions-0.55b1-py3-none-any.whl.metadata (2.5 kB)\n",
            "Collecting opentelemetry-api<2.0.0,>=1.28.0 (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_api-1.34.1-py3-none-any.whl.metadata (1.5 kB)\n",
            "Collecting opentelemetry-util-http==0.55b1 (from opentelemetry-instrumentation-requests>=0.50b0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading opentelemetry_util_http-0.55b1-py3-none-any.whl.metadata (2.6 kB)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.17.0)\n",
            "Collecting monotonic>=1.5 (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading monotonic-1.6-py2.py3-none-any.whl.metadata (1.5 kB)\n",
            "Collecting backoff>=1.10.0 (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit)\n",
            "  Downloading backoff-2.2.1-py3-none-any.whl.metadata (14 kB)\n",
            "Requirement already satisfied: python-dateutil>2.1 in /usr/local/lib/python3.11/dist-packages (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (2.9.0.post0)\n",
            "Requirement already satisfied: distro>=1.5.0 in /usr/local/lib/python3.11/dist-packages (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.9.0)\n",
            "Collecting wsproto (from simple-websocket>=0.10.0->python-engineio>=4.11.0->python-socketio<6.0.0,>=5.11.0->chainlit)\n",
            "  Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)\n",
            "Requirement already satisfied: jiter<1,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from anthropic>=0.17.0->opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.10.0)\n",
            "Requirement already satisfied: zipp>=3.20 in /usr/local/lib/python3.11/dist-packages (from importlib-metadata<8.8.0,>=6.0->opentelemetry-api<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (3.23.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests~=2.7->opentelemetry-exporter-otlp-proto-http<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (3.4.3)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests~=2.7->opentelemetry-exporter-otlp-proto-http<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (2.5.0)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.11/dist-packages (from tokenizers>=0.13.0->opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.34.4)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers>=0.13.0->opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (3.18.0)\n",
            "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers>=0.13.0->opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (2025.3.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers>=0.13.0->opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (6.0.2)\n",
            "Requirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers>=0.13.0->opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (4.67.1)\n",
            "Requirement already satisfied: hf-xet<2.0.0,>=1.1.3 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.16.4->tokenizers>=0.13.0->opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.1.7)\n",
            "Downloading chainlit-2.6.9-py3-none-any.whl (9.7 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.7/9.7 MB\u001b[0m \u001b[31m72.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading asyncer-0.0.8-py3-none-any.whl (9.2 kB)\n",
            "Downloading dataclasses_json-0.6.7-py3-none-any.whl (28 kB)\n",
            "Downloading filetype-1.2.0-py2.py3-none-any.whl (19 kB)\n",
            "Downloading Lazify-0.4.0-py2.py3-none-any.whl (3.1 kB)\n",
            "Downloading mcp-1.13.0-py3-none-any.whl (160 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m160.2/160.2 kB\u001b[0m \u001b[31m11.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading python_dotenv-1.1.1-py3-none-any.whl (20 kB)\n",
            "Downloading python_multipart-0.0.18-py3-none-any.whl (24 kB)\n",
            "Downloading python_socketio-5.13.0-py3-none-any.whl (77 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m77.8/77.8 kB\u001b[0m \u001b[31m3.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading tomli-2.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (236 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m236.0/236.0 kB\u001b[0m \u001b[31m13.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading watchfiles-0.20.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m50.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading bidict-0.23.1-py3-none-any.whl (32 kB)\n",
            "Downloading chevron-0.14.0-py3-none-any.whl (11 kB)\n",
            "Downloading httpx_sse-0.4.1-py3-none-any.whl (8.1 kB)\n",
            "Downloading marshmallow-3.26.1-py3-none-any.whl (50 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.9/50.9 kB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pydantic_settings-2.10.1-py3-none-any.whl (45 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.2/45.2 kB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading python_engineio-4.12.2-py3-none-any.whl (59 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m59.5/59.5 kB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading sse_starlette-3.0.2-py3-none-any.whl (11 kB)\n",
            "Downloading traceloop_sdk-0.45.4-py3-none-any.whl (39 kB)\n",
            "Downloading opentelemetry_instrumentation_alephalpha-0.45.4-py3-none-any.whl (8.0 kB)\n",
            "Downloading opentelemetry_instrumentation_anthropic-0.45.4-py3-none-any.whl (16 kB)\n",
            "Downloading opentelemetry_instrumentation_bedrock-0.45.4-py3-none-any.whl (18 kB)\n",
            "Downloading opentelemetry_instrumentation_chromadb-0.45.4-py3-none-any.whl (6.3 kB)\n",
            "Downloading opentelemetry_instrumentation_cohere-0.45.4-py3-none-any.whl (8.8 kB)\n",
            "Downloading opentelemetry_instrumentation_crewai-0.45.4-py3-none-any.whl (6.2 kB)\n",
            "Downloading opentelemetry_instrumentation_google_generativeai-0.45.4-py3-none-any.whl (9.8 kB)\n",
            "Downloading opentelemetry_instrumentation_groq-0.45.4-py3-none-any.whl (10 kB)\n",
            "Downloading opentelemetry_instrumentation_haystack-0.45.4-py3-none-any.whl (7.5 kB)\n",
            "Downloading opentelemetry_instrumentation_lancedb-0.45.4-py3-none-any.whl (4.8 kB)\n",
            "Downloading opentelemetry_instrumentation_langchain-0.45.4-py3-none-any.whl (18 kB)\n",
            "Downloading opentelemetry_instrumentation_llamaindex-0.45.4-py3-none-any.whl (21 kB)\n",
            "Downloading opentelemetry_instrumentation_marqo-0.45.4-py3-none-any.whl (5.1 kB)\n",
            "Downloading opentelemetry_instrumentation_mcp-0.45.4-py3-none-any.whl (6.3 kB)\n",
            "Downloading opentelemetry_instrumentation_milvus-0.45.4-py3-none-any.whl (7.1 kB)\n",
            "Downloading opentelemetry_instrumentation_mistralai-0.45.4-py3-none-any.whl (8.8 kB)\n",
            "Downloading opentelemetry_instrumentation_ollama-0.45.4-py3-none-any.whl (10 kB)\n",
            "Downloading opentelemetry_instrumentation_openai-0.45.4-py3-none-any.whl (34 kB)\n",
            "Downloading opentelemetry_instrumentation_openai_agents-0.45.4-py3-none-any.whl (7.6 kB)\n",
            "Downloading opentelemetry_instrumentation_pinecone-0.45.4-py3-none-any.whl (6.4 kB)\n",
            "Downloading opentelemetry_instrumentation_qdrant-0.45.4-py3-none-any.whl (6.3 kB)\n",
            "Downloading opentelemetry_instrumentation_replicate-0.45.4-py3-none-any.whl (8.1 kB)\n",
            "Downloading opentelemetry_instrumentation_sagemaker-0.45.4-py3-none-any.whl (9.8 kB)\n",
            "Downloading opentelemetry_instrumentation_together-0.45.4-py3-none-any.whl (8.6 kB)\n",
            "Downloading opentelemetry_instrumentation_transformers-0.45.4-py3-none-any.whl (8.2 kB)\n",
            "Downloading opentelemetry_instrumentation_vertexai-0.45.4-py3-none-any.whl (8.9 kB)\n",
            "Downloading opentelemetry_instrumentation_watsonx-0.45.4-py3-none-any.whl (10 kB)\n",
            "Downloading opentelemetry_instrumentation_weaviate-0.45.4-py3-none-any.whl (6.4 kB)\n",
            "Downloading opentelemetry_exporter_otlp-1.34.1-py3-none-any.whl (7.0 kB)\n",
            "Downloading opentelemetry_exporter_otlp_proto_grpc-1.34.1-py3-none-any.whl (18 kB)\n",
            "Downloading opentelemetry_exporter_otlp_proto_http-1.34.1-py3-none-any.whl (17 kB)\n",
            "Downloading opentelemetry_exporter_otlp_proto_common-1.34.1-py3-none-any.whl (18 kB)\n",
            "Downloading opentelemetry_proto-1.34.1-py3-none-any.whl (55 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m55.7/55.7 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n",
            "Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n",
            "Downloading Deprecated-1.2.18-py2.py3-none-any.whl (10.0 kB)\n",
            "Downloading mypy_extensions-1.1.0-py3-none-any.whl (5.0 kB)\n",
            "Downloading opentelemetry_instrumentation_logging-0.55b1-py3-none-any.whl (12 kB)\n",
            "Downloading opentelemetry_instrumentation-0.55b1-py3-none-any.whl (31 kB)\n",
            "Downloading opentelemetry_semantic_conventions-0.55b1-py3-none-any.whl (196 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m196.2/196.2 kB\u001b[0m \u001b[31m12.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading opentelemetry_api-1.34.1-py3-none-any.whl (65 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m65.8/65.8 kB\u001b[0m \u001b[31m4.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading opentelemetry_instrumentation_redis-0.55b1-py3-none-any.whl (14 kB)\n",
            "Downloading opentelemetry_instrumentation_requests-0.55b1-py3-none-any.whl (12 kB)\n",
            "Downloading opentelemetry_util_http-0.55b1-py3-none-any.whl (7.3 kB)\n",
            "Downloading opentelemetry_instrumentation_sqlalchemy-0.55b1-py3-none-any.whl (14 kB)\n",
            "Downloading opentelemetry_instrumentation_threading-0.55b1-py3-none-any.whl (9.3 kB)\n",
            "Downloading opentelemetry_instrumentation_urllib3-0.55b1-py3-none-any.whl (13 kB)\n",
            "Downloading opentelemetry_sdk-1.34.1-py3-none-any.whl (118 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m118.5/118.5 kB\u001b[0m \u001b[31m7.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading opentelemetry_semantic_conventions_ai-0.4.12-py3-none-any.whl (6.0 kB)\n",
            "Downloading posthog-3.25.0-py2.py3-none-any.whl (89 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m89.1/89.1 kB\u001b[0m \u001b[31m5.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading simple_websocket-1.1.0-py3-none-any.whl (13 kB)\n",
            "Downloading anthropic-0.64.0-py3-none-any.whl (297 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m297.2/297.2 kB\u001b[0m \u001b[31m17.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading backoff-2.2.1-py3-none-any.whl (15 kB)\n",
            "Downloading inflection-0.5.1-py2.py3-none-any.whl (9.5 kB)\n",
            "Downloading monotonic-1.6-py2.py3-none-any.whl (8.2 kB)\n",
            "Downloading wsproto-1.2.0-py3-none-any.whl (24 kB)\n",
            "Building wheels for collected packages: literalai, syncer\n",
            "  Building wheel for literalai (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for literalai: filename=literalai-0.1.201-py3-none-any.whl size=89088 sha256=13fb5b1671199f75c4d245ebaf2a234278e1b62841fad14f8d46679917a3acd1\n",
            "  Stored in directory: /root/.cache/pip/wheels/24/35/a3/7a1d9d9e46c1a7b4ae8e059098a42177354130a8ca83c1a2b7\n",
            "  Building wheel for syncer (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for syncer: filename=syncer-2.0.3-py2.py3-none-any.whl size=3437 sha256=0b80e57973b7471a60a73b01c6c052e54b15ac6d44c3ea3c00d20638ea93a909\n",
            "  Stored in directory: /root/.cache/pip/wheels/fa/a7/d4/9253c7f0256e67e3ff75d4c095c076a3882e319728e94bc6a1\n",
            "Successfully built literalai syncer\n",
            "Installing collected packages: syncer, monotonic, lazify, filetype, chevron, wsproto, tomli, python-multipart, python-dotenv, opentelemetry-util-http, opentelemetry-semantic-conventions-ai, opentelemetry-proto, mypy-extensions, marshmallow, inflection, httpx-sse, deprecated, colorama, bidict, backoff, watchfiles, typing-inspect, sse-starlette, simple-websocket, posthog, opentelemetry-exporter-otlp-proto-common, opentelemetry-api, asyncer, python-engineio, pydantic-settings, opentelemetry-semantic-conventions, dataclasses_json, anthropic, python-socketio, opentelemetry-sdk, opentelemetry-instrumentation, mcp, opentelemetry-instrumentation-weaviate, opentelemetry-instrumentation-watsonx, opentelemetry-instrumentation-vertexai, opentelemetry-instrumentation-urllib3, opentelemetry-instrumentation-transformers, opentelemetry-instrumentation-together, opentelemetry-instrumentation-threading, opentelemetry-instrumentation-sqlalchemy, opentelemetry-instrumentation-sagemaker, opentelemetry-instrumentation-requests, opentelemetry-instrumentation-replicate, opentelemetry-instrumentation-redis, opentelemetry-instrumentation-qdrant, opentelemetry-instrumentation-pinecone, opentelemetry-instrumentation-openai-agents, opentelemetry-instrumentation-openai, opentelemetry-instrumentation-ollama, opentelemetry-instrumentation-mistralai, opentelemetry-instrumentation-milvus, opentelemetry-instrumentation-marqo, opentelemetry-instrumentation-logging, opentelemetry-instrumentation-llamaindex, opentelemetry-instrumentation-langchain, opentelemetry-instrumentation-lancedb, opentelemetry-instrumentation-haystack, opentelemetry-instrumentation-groq, opentelemetry-instrumentation-google-generativeai, opentelemetry-instrumentation-crewai, opentelemetry-instrumentation-cohere, opentelemetry-instrumentation-chromadb, opentelemetry-instrumentation-bedrock, opentelemetry-instrumentation-anthropic, opentelemetry-instrumentation-alephalpha, opentelemetry-exporter-otlp-proto-http, opentelemetry-exporter-otlp-proto-grpc, opentelemetry-exporter-otlp, opentelemetry-instrumentation-mcp, traceloop-sdk, literalai, chainlit\n",
            "  Attempting uninstall: python-multipart\n",
            "    Found existing installation: python-multipart 0.0.20\n",
            "    Uninstalling python-multipart-0.0.20:\n",
            "      Successfully uninstalled python-multipart-0.0.20\n",
            "Successfully installed anthropic-0.64.0 asyncer-0.0.8 backoff-2.2.1 bidict-0.23.1 chainlit-2.6.9 chevron-0.14.0 colorama-0.4.6 dataclasses_json-0.6.7 deprecated-1.2.18 filetype-1.2.0 httpx-sse-0.4.1 inflection-0.5.1 lazify-0.4.0 literalai-0.1.201 marshmallow-3.26.1 mcp-1.13.0 monotonic-1.6 mypy-extensions-1.1.0 opentelemetry-api-1.34.1 opentelemetry-exporter-otlp-1.34.1 opentelemetry-exporter-otlp-proto-common-1.34.1 opentelemetry-exporter-otlp-proto-grpc-1.34.1 opentelemetry-exporter-otlp-proto-http-1.34.1 opentelemetry-instrumentation-0.55b1 opentelemetry-instrumentation-alephalpha-0.45.4 opentelemetry-instrumentation-anthropic-0.45.4 opentelemetry-instrumentation-bedrock-0.45.4 opentelemetry-instrumentation-chromadb-0.45.4 opentelemetry-instrumentation-cohere-0.45.4 opentelemetry-instrumentation-crewai-0.45.4 opentelemetry-instrumentation-google-generativeai-0.45.4 opentelemetry-instrumentation-groq-0.45.4 opentelemetry-instrumentation-haystack-0.45.4 opentelemetry-instrumentation-lancedb-0.45.4 opentelemetry-instrumentation-langchain-0.45.4 opentelemetry-instrumentation-llamaindex-0.45.4 opentelemetry-instrumentation-logging-0.55b1 opentelemetry-instrumentation-marqo-0.45.4 opentelemetry-instrumentation-mcp-0.45.4 opentelemetry-instrumentation-milvus-0.45.4 opentelemetry-instrumentation-mistralai-0.45.4 opentelemetry-instrumentation-ollama-0.45.4 opentelemetry-instrumentation-openai-0.45.4 opentelemetry-instrumentation-openai-agents-0.45.4 opentelemetry-instrumentation-pinecone-0.45.4 opentelemetry-instrumentation-qdrant-0.45.4 opentelemetry-instrumentation-redis-0.55b1 opentelemetry-instrumentation-replicate-0.45.4 opentelemetry-instrumentation-requests-0.55b1 opentelemetry-instrumentation-sagemaker-0.45.4 opentelemetry-instrumentation-sqlalchemy-0.55b1 opentelemetry-instrumentation-threading-0.55b1 opentelemetry-instrumentation-together-0.45.4 opentelemetry-instrumentation-transformers-0.45.4 opentelemetry-instrumentation-urllib3-0.55b1 opentelemetry-instrumentation-vertexai-0.45.4 opentelemetry-instrumentation-watsonx-0.45.4 opentelemetry-instrumentation-weaviate-0.45.4 opentelemetry-proto-1.34.1 opentelemetry-sdk-1.34.1 opentelemetry-semantic-conventions-0.55b1 opentelemetry-semantic-conventions-ai-0.4.12 opentelemetry-util-http-0.55b1 posthog-3.25.0 pydantic-settings-2.10.1 python-dotenv-1.1.1 python-engineio-4.12.2 python-multipart-0.0.18 python-socketio-5.13.0 simple-websocket-1.1.0 sse-starlette-3.0.2 syncer-2.0.3 tomli-2.2.1 traceloop-sdk-0.45.4 typing-inspect-0.9.0 watchfiles-0.20.0 wsproto-1.2.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%pip install chainlit langchain-community sentence-transformers faiss-cpu python-dotenv"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "2kFUmn_DTnqm",
        "outputId": "45769fb4-fb4c-46e4-f7d7-d027fb0346af"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: chainlit in /usr/local/lib/python3.11/dist-packages (2.6.9)\n",
            "Collecting langchain-community\n",
            "  Downloading langchain_community-0.3.27-py3-none-any.whl.metadata (2.9 kB)\n",
            "Requirement already satisfied: sentence-transformers in /usr/local/lib/python3.11/dist-packages (5.1.0)\n",
            "Collecting faiss-cpu\n",
            "  Downloading faiss_cpu-1.12.0-cp311-cp311-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl.metadata (5.1 kB)\n",
            "Requirement already satisfied: python-dotenv in /usr/local/lib/python3.11/dist-packages (1.1.1)\n",
            "Requirement already satisfied: aiofiles<25.0.0,>=23.1.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (24.1.0)\n",
            "Requirement already satisfied: asyncer<0.0.9,>=0.0.8 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.0.8)\n",
            "Requirement already satisfied: click<9.0.0,>=8.1.3 in /usr/local/lib/python3.11/dist-packages (from chainlit) (8.2.1)\n",
            "Requirement already satisfied: dataclasses_json<0.7.0,>=0.6.7 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.6.7)\n",
            "Requirement already satisfied: fastapi<0.117,>=0.116.1 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.116.1)\n",
            "Requirement already satisfied: filetype<2.0.0,>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (1.2.0)\n",
            "Requirement already satisfied: httpx>=0.23.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.28.1)\n",
            "Requirement already satisfied: lazify<0.5.0,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.4.0)\n",
            "Requirement already satisfied: literalai==0.1.201 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.1.201)\n",
            "Requirement already satisfied: mcp<2.0.0,>=1.11.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (1.13.0)\n",
            "Requirement already satisfied: nest-asyncio<2.0.0,>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (1.6.0)\n",
            "Requirement already satisfied: packaging>=23.1 in /usr/local/lib/python3.11/dist-packages (from chainlit) (25.0)\n",
            "Requirement already satisfied: pydantic<3,>=2.7.2 in /usr/local/lib/python3.11/dist-packages (from chainlit) (2.11.7)\n",
            "Requirement already satisfied: pyjwt<3.0.0,>=2.8.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (2.10.1)\n",
            "Requirement already satisfied: python-multipart<0.0.19,>=0.0.18 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.0.18)\n",
            "Requirement already satisfied: python-socketio<6.0.0,>=5.11.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (5.13.0)\n",
            "Requirement already satisfied: starlette>=0.47.2 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.47.2)\n",
            "Requirement already satisfied: syncer<3.0.0,>=2.0.3 in /usr/local/lib/python3.11/dist-packages (from chainlit) (2.0.3)\n",
            "Requirement already satisfied: tomli<3.0.0,>=2.0.1 in /usr/local/lib/python3.11/dist-packages (from chainlit) (2.2.1)\n",
            "Requirement already satisfied: uvicorn>=0.35.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.35.0)\n",
            "Requirement already satisfied: watchfiles<0.21.0,>=0.20.0 in /usr/local/lib/python3.11/dist-packages (from chainlit) (0.20.0)\n",
            "Requirement already satisfied: chevron>=0.14.0 in /usr/local/lib/python3.11/dist-packages (from literalai==0.1.201->chainlit) (0.14.0)\n",
            "Requirement already satisfied: traceloop-sdk>=0.33.12 in /usr/local/lib/python3.11/dist-packages (from literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: langchain-core<1.0.0,>=0.3.66 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (0.3.74)\n",
            "Requirement already satisfied: langchain<1.0.0,>=0.3.26 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (0.3.27)\n",
            "Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (2.0.43)\n",
            "Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (2.32.3)\n",
            "Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (6.0.2)\n",
            "Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (3.12.15)\n",
            "Requirement already satisfied: tenacity!=8.4.0,<10,>=8.1.0 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (9.1.2)\n",
            "Requirement already satisfied: pydantic-settings<3.0.0,>=2.4.0 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (2.10.1)\n",
            "Requirement already satisfied: langsmith>=0.1.125 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (0.4.14)\n",
            "Requirement already satisfied: httpx-sse<1.0.0,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (0.4.1)\n",
            "Requirement already satisfied: numpy>=1.26.2 in /usr/local/lib/python3.11/dist-packages (from langchain-community) (2.0.2)\n",
            "Requirement already satisfied: transformers<5.0.0,>=4.41.0 in /usr/local/lib/python3.11/dist-packages (from sentence-transformers) (4.55.1)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from sentence-transformers) (4.67.1)\n",
            "Requirement already satisfied: torch>=1.11.0 in /usr/local/lib/python3.11/dist-packages (from sentence-transformers) (2.6.0+cu124)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.11/dist-packages (from sentence-transformers) (1.6.1)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from sentence-transformers) (1.16.1)\n",
            "Requirement already satisfied: huggingface-hub>=0.20.0 in /usr/local/lib/python3.11/dist-packages (from sentence-transformers) (0.34.4)\n",
            "Requirement already satisfied: Pillow in /usr/local/lib/python3.11/dist-packages (from sentence-transformers) (11.3.0)\n",
            "Requirement already satisfied: typing_extensions>=4.5.0 in /usr/local/lib/python3.11/dist-packages (from sentence-transformers) (4.14.1)\n",
            "Requirement already satisfied: aiohappyeyeballs>=2.5.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (2.6.1)\n",
            "Requirement already satisfied: aiosignal>=1.4.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.4.0)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (25.3.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.7.0)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (6.6.4)\n",
            "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (0.3.2)\n",
            "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.20.1)\n",
            "Requirement already satisfied: anyio<5.0,>=3.4.0 in /usr/local/lib/python3.11/dist-packages (from asyncer<0.0.9,>=0.0.8->chainlit) (4.10.0)\n",
            "Requirement already satisfied: marshmallow<4.0.0,>=3.18.0 in /usr/local/lib/python3.11/dist-packages (from dataclasses_json<0.7.0,>=0.6.7->chainlit) (3.26.1)\n",
            "Requirement already satisfied: typing-inspect<1,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from dataclasses_json<0.7.0,>=0.6.7->chainlit) (0.9.0)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.11/dist-packages (from httpx>=0.23.0->chainlit) (2025.8.3)\n",
            "Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.11/dist-packages (from httpx>=0.23.0->chainlit) (1.0.9)\n",
            "Requirement already satisfied: idna in /usr/local/lib/python3.11/dist-packages (from httpx>=0.23.0->chainlit) (3.10)\n",
            "Requirement already satisfied: h11>=0.16 in /usr/local/lib/python3.11/dist-packages (from httpcore==1.*->httpx>=0.23.0->chainlit) (0.16.0)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.20.0->sentence-transformers) (3.18.0)\n",
            "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.20.0->sentence-transformers) (2025.3.0)\n",
            "Requirement already satisfied: hf-xet<2.0.0,>=1.1.3 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub>=0.20.0->sentence-transformers) (1.1.7)\n",
            "Requirement already satisfied: langchain-text-splitters<1.0.0,>=0.3.9 in /usr/local/lib/python3.11/dist-packages (from langchain<1.0.0,>=0.3.26->langchain-community) (0.3.9)\n",
            "Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.11/dist-packages (from langchain-core<1.0.0,>=0.3.66->langchain-community) (1.33)\n",
            "Requirement already satisfied: orjson>=3.9.14 in /usr/local/lib/python3.11/dist-packages (from langsmith>=0.1.125->langchain-community) (3.11.2)\n",
            "Requirement already satisfied: requests-toolbelt>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from langsmith>=0.1.125->langchain-community) (1.0.0)\n",
            "Requirement already satisfied: zstandard>=0.23.0 in /usr/local/lib/python3.11/dist-packages (from langsmith>=0.1.125->langchain-community) (0.23.0)\n",
            "Requirement already satisfied: jsonschema>=4.20.0 in /usr/local/lib/python3.11/dist-packages (from mcp<2.0.0,>=1.11.0->chainlit) (4.25.0)\n",
            "Requirement already satisfied: sse-starlette>=1.6.1 in /usr/local/lib/python3.11/dist-packages (from mcp<2.0.0,>=1.11.0->chainlit) (3.0.2)\n",
            "Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=2.7.2->chainlit) (0.7.0)\n",
            "Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=2.7.2->chainlit) (2.33.2)\n",
            "Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from pydantic<3,>=2.7.2->chainlit) (0.4.1)\n",
            "Requirement already satisfied: bidict>=0.21.0 in /usr/local/lib/python3.11/dist-packages (from python-socketio<6.0.0,>=5.11.0->chainlit) (0.23.1)\n",
            "Requirement already satisfied: python-engineio>=4.11.0 in /usr/local/lib/python3.11/dist-packages (from python-socketio<6.0.0,>=5.11.0->chainlit) (4.12.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2->langchain-community) (3.4.3)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2->langchain-community) (2.5.0)\n",
            "Requirement already satisfied: greenlet>=1 in /usr/local/lib/python3.11/dist-packages (from SQLAlchemy<3,>=1.4->langchain-community) (3.2.4)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch>=1.11.0->sentence-transformers) (3.5)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.11.0->sentence-transformers) (3.1.6)\n",
            "Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cublas-cu12==12.4.5.8 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cufft-cu12==11.2.1.3 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-curand-cu12==10.3.5.147 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n",
            "Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.11.0->sentence-transformers) (0.6.2)\n",
            "Collecting nvidia-nccl-cu12==2.21.5 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_nccl_cu12-2.21.5-py3-none-manylinux2014_x86_64.whl.metadata (1.8 kB)\n",
            "Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.11.0->sentence-transformers) (12.4.127)\n",
            "Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch>=1.11.0->sentence-transformers)\n",
            "  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.11.0->sentence-transformers) (3.2.0)\n",
            "Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch>=1.11.0->sentence-transformers) (1.13.1)\n",
            "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch>=1.11.0->sentence-transformers) (1.3.0)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.11/dist-packages (from transformers<5.0.0,>=4.41.0->sentence-transformers) (2024.11.6)\n",
            "Requirement already satisfied: tokenizers<0.22,>=0.21 in /usr/local/lib/python3.11/dist-packages (from transformers<5.0.0,>=4.41.0->sentence-transformers) (0.21.4)\n",
            "Requirement already satisfied: safetensors>=0.4.3 in /usr/local/lib/python3.11/dist-packages (from transformers<5.0.0,>=4.41.0->sentence-transformers) (0.6.2)\n",
            "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->sentence-transformers) (1.5.1)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->sentence-transformers) (3.6.0)\n",
            "Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio<5.0,>=3.4.0->asyncer<0.0.9,>=0.0.8->chainlit) (1.3.1)\n",
            "Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.11/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core<1.0.0,>=0.3.66->langchain-community) (3.0.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=4.20.0->mcp<2.0.0,>=1.11.0->chainlit) (2025.4.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=4.20.0->mcp<2.0.0,>=1.11.0->chainlit) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=4.20.0->mcp<2.0.0,>=1.11.0->chainlit) (0.27.0)\n",
            "Requirement already satisfied: simple-websocket>=0.10.0 in /usr/local/lib/python3.11/dist-packages (from python-engineio>=4.11.0->python-socketio<6.0.0,>=5.11.0->chainlit) (1.1.0)\n",
            "Requirement already satisfied: colorama<0.5.0,>=0.4.6 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.4.6)\n",
            "Requirement already satisfied: deprecated<2.0.0,>=1.2.14 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.2.18)\n",
            "Requirement already satisfied: opentelemetry-api<2.0.0,>=1.28.0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.34.1)\n",
            "Requirement already satisfied: opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.34.1)\n",
            "Requirement already satisfied: opentelemetry-exporter-otlp-proto-http<2.0.0,>=1.28.0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.34.1)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-alephalpha==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-anthropic==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-bedrock==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-chromadb==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-cohere==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-crewai==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-google-generativeai==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-groq==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-haystack==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-lancedb==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-langchain==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-llamaindex==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-logging>=0.50b0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-marqo==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-mcp==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-milvus==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-mistralai==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-ollama==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-openai==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-openai-agents==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-pinecone==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-qdrant==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-redis>=0.50b0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-replicate==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-requests>=0.50b0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-sagemaker==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-sqlalchemy>=0.50b0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-threading>=0.50b0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-together==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-transformers==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-urllib3>=0.50b0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-vertexai==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-watsonx==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-instrumentation-weaviate==0.45.4 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.45.4)\n",
            "Requirement already satisfied: opentelemetry-sdk<2.0.0,>=1.28.0 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.34.1)\n",
            "Requirement already satisfied: opentelemetry-semantic-conventions-ai<0.5.0,>=0.4.12 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.4.12)\n",
            "Requirement already satisfied: posthog<4,>3.0.2 in /usr/local/lib/python3.11/dist-packages (from traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (3.25.0)\n",
            "Requirement already satisfied: opentelemetry-instrumentation>=0.50b0 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-instrumentation-alephalpha==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: opentelemetry-semantic-conventions>=0.50b0 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-instrumentation-alephalpha==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: anthropic>=0.17.0 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.64.0)\n",
            "Requirement already satisfied: inflection<0.6.0,>=0.5.1 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-instrumentation-llamaindex==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.5.1)\n",
            "Requirement already satisfied: opentelemetry-exporter-otlp==1.34.1 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-instrumentation-mcp==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.34.1)\n",
            "Requirement already satisfied: googleapis-common-protos~=1.52 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.70.0)\n",
            "Requirement already satisfied: grpcio<2.0.0,>=1.63.2 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.74.0)\n",
            "Requirement already satisfied: opentelemetry-exporter-otlp-proto-common==1.34.1 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.34.1)\n",
            "Requirement already satisfied: opentelemetry-proto==1.34.1 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.34.1)\n",
            "Requirement already satisfied: protobuf<6.0,>=5.0 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-proto==1.34.1->opentelemetry-exporter-otlp-proto-grpc<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (5.29.5)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch>=1.11.0->sentence-transformers) (3.0.2)\n",
            "Requirement already satisfied: mypy-extensions>=0.3.0 in /usr/local/lib/python3.11/dist-packages (from typing-inspect<1,>=0.4.0->dataclasses_json<0.7.0,>=0.6.7->chainlit) (1.1.0)\n",
            "Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.11/dist-packages (from deprecated<2.0.0,>=1.2.14->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.17.3)\n",
            "Requirement already satisfied: importlib-metadata<8.8.0,>=6.0 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-api<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (8.7.0)\n",
            "Requirement already satisfied: opentelemetry-util-http==0.55b1 in /usr/local/lib/python3.11/dist-packages (from opentelemetry-instrumentation-requests>=0.50b0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.55b1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.17.0)\n",
            "Requirement already satisfied: monotonic>=1.5 in /usr/local/lib/python3.11/dist-packages (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.6)\n",
            "Requirement already satisfied: backoff>=1.10.0 in /usr/local/lib/python3.11/dist-packages (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (2.2.1)\n",
            "Requirement already satisfied: python-dateutil>2.1 in /usr/local/lib/python3.11/dist-packages (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (2.9.0.post0)\n",
            "Requirement already satisfied: distro>=1.5.0 in /usr/local/lib/python3.11/dist-packages (from posthog<4,>3.0.2->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (1.9.0)\n",
            "Requirement already satisfied: wsproto in /usr/local/lib/python3.11/dist-packages (from simple-websocket>=0.10.0->python-engineio>=4.11.0->python-socketio<6.0.0,>=5.11.0->chainlit) (1.2.0)\n",
            "Requirement already satisfied: jiter<1,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from anthropic>=0.17.0->opentelemetry-instrumentation-bedrock==0.45.4->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (0.10.0)\n",
            "Requirement already satisfied: zipp>=3.20 in /usr/local/lib/python3.11/dist-packages (from importlib-metadata<8.8.0,>=6.0->opentelemetry-api<2.0.0,>=1.28.0->traceloop-sdk>=0.33.12->literalai==0.1.201->chainlit) (3.23.0)\n",
            "Downloading langchain_community-0.3.27-py3-none-any.whl (2.5 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m22.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading faiss_cpu-1.12.0-cp311-cp311-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl (31.4 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m31.4/31.4 MB\u001b[0m \u001b[31m49.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m1.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m82.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m62.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m20.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m11.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_nccl_cu12-2.21.5-py3-none-manylinux2014_x86_64.whl (188.7 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m188.7/188.7 MB\u001b[0m \u001b[31m5.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m66.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, faiss-cpu, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, langchain-community\n",
            "  Attempting uninstall: nvidia-nvjitlink-cu12\n",
            "    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n",
            "    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n",
            "      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n",
            "  Attempting uninstall: nvidia-nccl-cu12\n",
            "    Found existing installation: nvidia-nccl-cu12 2.23.4\n",
            "    Uninstalling nvidia-nccl-cu12-2.23.4:\n",
            "      Successfully uninstalled nvidia-nccl-cu12-2.23.4\n",
            "  Attempting uninstall: nvidia-curand-cu12\n",
            "    Found existing installation: nvidia-curand-cu12 10.3.6.82\n",
            "    Uninstalling nvidia-curand-cu12-10.3.6.82:\n",
            "      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n",
            "  Attempting uninstall: nvidia-cufft-cu12\n",
            "    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n",
            "    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n",
            "      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n",
            "  Attempting uninstall: nvidia-cuda-runtime-cu12\n",
            "    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n",
            "    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n",
            "      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n",
            "  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n",
            "    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n",
            "    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n",
            "      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n",
            "  Attempting uninstall: nvidia-cuda-cupti-cu12\n",
            "    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n",
            "    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n",
            "      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n",
            "  Attempting uninstall: nvidia-cublas-cu12\n",
            "    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n",
            "    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n",
            "      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n",
            "  Attempting uninstall: nvidia-cusparse-cu12\n",
            "    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n",
            "    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n",
            "      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n",
            "  Attempting uninstall: nvidia-cudnn-cu12\n",
            "    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n",
            "    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n",
            "      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n",
            "  Attempting uninstall: nvidia-cusolver-cu12\n",
            "    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n",
            "    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n",
            "      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n",
            "Successfully installed faiss-cpu-1.12.0 langchain-community-0.3.27 nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nccl-cu12-2.21.5 nvidia-nvjitlink-cu12-12.4.127\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\"\"\"\n",
        "Chainlit SQL Interview Prep RAG Chatbot\n",
        "Beautiful web-based chatbot using your original PDF content\n",
        "\"\"\"\n",
        "\n",
        "import os\n",
        "import asyncio\n",
        "from typing import List, Dict, Optional\n",
        "import chainlit as cl\n",
        "from dotenv import load_dotenv\n",
        "from langchain.text_splitter import RecursiveCharacterTextSplitter\n",
        "from langchain_community.embeddings import HuggingFaceEmbeddings\n",
        "from langchain_community.vectorstores import FAISS\n",
        "from langchain_community.llms import HuggingFacePipeline\n",
        "from langchain.chains import RetrievalQA\n",
        "from langchain.schema import Document\n",
        "from langchain.callbacks.base import BaseCallbackHandler\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "# Load environment variables\n",
        "load_dotenv()\n",
        "\n",
        "class ChainlitCallbackHandler(BaseCallbackHandler):\n",
        "    \"\"\"Custom callback handler for Chainlit streaming\"\"\"\n",
        "\n",
        "    def __init__(self):\n",
        "        self.msg = None\n",
        "        self.content = \"\"\n",
        "\n",
        "    async def on_llm_start(self, serialized, prompts, **kwargs):\n",
        "        \"\"\"Called when LLM starts\"\"\"\n",
        "        self.msg = cl.Message(content=\"\")\n",
        "        await self.msg.send()\n",
        "\n",
        "    async def on_llm_new_token(self, token: str, **kwargs):\n",
        "        \"\"\"Called when a new token is generated\"\"\"\n",
        "        self.content += token\n",
        "        await self.msg.update()\n",
        "\n",
        "class SQLRAGChatbot:\n",
        "    def __init__(self):\n",
        "        \"\"\"Initialize the SQL RAG chatbot\"\"\"\n",
        "        self.vectorstore = None\n",
        "        self.qa_chain = None\n",
        "        self.embeddings = None\n",
        "        self.conversation_history = []\n",
        "\n",
        "    async def setup_embeddings(self):\n",
        "        \"\"\"Setup embedding model\"\"\"\n",
        "        await cl.Message(content=\"🔧 Loading embedding model...\").send()\n",
        "\n",
        "        self.embeddings = HuggingFaceEmbeddings(\n",
        "            model_name=\"sentence-transformers/all-MiniLM-L6-v2\",\n",
        "            model_kwargs={'device': 'cpu'},\n",
        "            encode_kwargs={'normalize_embeddings': True}\n",
        "        )\n",
        "\n",
        "        await cl.Message(content=\"✅ Embeddings ready!\").send()\n",
        "\n",
        "    def load_sql_interview_content(self) -> List[Document]:\n",
        "        \"\"\"Load the SQL interview content from your original PDF\"\"\"\n",
        "\n",
        "        # Content extracted from your original PDF\n",
        "        sql_content = {\n",
        "            \"WHERE vs HAVING\": \"\"\"\n",
        "            What is the difference between WHERE and HAVING?\n",
        "\n",
        "            WHERE filters rows before aggregation.\n",
        "            HAVING filters groups after aggregation.\n",
        "\n",
        "            Example:\n",
        "            SELECT department, COUNT(*)\n",
        "            FROM employees\n",
        "            WHERE status = 'active'\n",
        "            GROUP BY department\n",
        "            HAVING COUNT(*) > 5;\n",
        "\n",
        "            Key differences:\n",
        "            - WHERE is applied to individual rows before any grouping\n",
        "            - HAVING is applied to grouped rows after GROUP BY\n",
        "            - WHERE cannot use aggregate functions like COUNT(), SUM()\n",
        "            - HAVING can use aggregate functions\n",
        "            \"\"\",\n",
        "\n",
        "            \"Window Functions\": \"\"\"\n",
        "            Explain the use of ROW_NUMBER(), RANK(), and DENSE_RANK().\n",
        "\n",
        "            These are window functions used for ranking rows:\n",
        "\n",
        "            ROW_NUMBER(): Unique row numbers even if values are the same.\n",
        "            - Always assigns sequential numbers: 1, 2, 3, 4...\n",
        "\n",
        "            RANK(): Gives the same rank to ties, but skips the next rank(s).\n",
        "            - With ties: 1, 2, 2, 4...\n",
        "\n",
        "            DENSE_RANK(): Gives the same rank to ties without skipping ranks.\n",
        "            - With ties: 1, 2, 2, 3...\n",
        "\n",
        "            Example:\n",
        "            SELECT name, salary,\n",
        "                ROW_NUMBER() OVER (ORDER BY salary DESC) as row_num,\n",
        "                RANK() OVER (ORDER BY salary DESC) as rank_val,\n",
        "                DENSE_RANK() OVER (ORDER BY salary DESC) as dense_rank_val\n",
        "            FROM employees;\n",
        "            \"\"\",\n",
        "\n",
        "            \"CTEs vs Subqueries\": \"\"\"\n",
        "            What is a CTE and how is it different from a subquery?\n",
        "\n",
        "            A Common Table Expression (CTE) is a temporary result set defined using WITH.\n",
        "\n",
        "            CTEs vs Subqueries:\n",
        "            - CTEs are more readable and can be reused within the same query\n",
        "            - Subqueries are nested inside the main query and not reusable\n",
        "            - CTEs can be recursive\n",
        "            - CTEs appear at the beginning of the query\n",
        "\n",
        "            CTE Example:\n",
        "            WITH active_customers AS (\n",
        "                SELECT * FROM customers WHERE status = 'active'\n",
        "            )\n",
        "            SELECT city, COUNT(*) FROM active_customers GROUP BY city;\n",
        "\n",
        "            Subquery Example:\n",
        "            SELECT city, COUNT(*)\n",
        "            FROM (SELECT * FROM customers WHERE status = 'active') subq\n",
        "            GROUP BY city;\n",
        "            \"\"\",\n",
        "\n",
        "            \"JOIN Types\": \"\"\"\n",
        "            How does a LEFT JOIN differ from an INNER JOIN?\n",
        "\n",
        "            INNER JOIN: Returns only matching rows from both tables.\n",
        "            - Only includes records where the join condition is met in both tables\n",
        "            - Smaller result set\n",
        "\n",
        "            LEFT JOIN: Returns all rows from the left table and matching rows from the right.\n",
        "            - Includes all records from the left table\n",
        "            - Shows NULL for unmatched records from the right table\n",
        "            - Also called LEFT OUTER JOIN\n",
        "\n",
        "            Example:\n",
        "            -- INNER JOIN (only employees with departments)\n",
        "            SELECT e.name, d.department_name\n",
        "            FROM employees e\n",
        "            INNER JOIN departments d ON e.dept_id = d.dept_id;\n",
        "\n",
        "            -- LEFT JOIN (all employees, even without departments)\n",
        "            SELECT e.name, d.department_name\n",
        "            FROM employees e\n",
        "            LEFT JOIN departments d ON e.dept_id = d.dept_id;\n",
        "            \"\"\",\n",
        "\n",
        "            \"UNION Operations\": \"\"\"\n",
        "            What is the difference between UNION and UNION ALL?\n",
        "\n",
        "            UNION: Removes duplicates.\n",
        "            - Performs automatic deduplication\n",
        "            - Slower execution due to duplicate checking\n",
        "            - Returns unique rows only\n",
        "\n",
        "            UNION ALL: Keeps duplicates.\n",
        "            - No deduplication performed\n",
        "            - Faster execution\n",
        "            - Returns all rows including duplicates\n",
        "\n",
        "            Example:\n",
        "            -- UNION (removes duplicates)\n",
        "            SELECT city FROM customers\n",
        "            UNION\n",
        "            SELECT city FROM suppliers;\n",
        "\n",
        "            -- UNION ALL (keeps duplicates)\n",
        "            SELECT city FROM customers\n",
        "            UNION ALL\n",
        "            SELECT city FROM suppliers;\n",
        "\n",
        "            Use UNION when you need unique results.\n",
        "            Use UNION ALL when performance matters and duplicates are acceptable.\n",
        "            \"\"\",\n",
        "\n",
        "            \"Nth Highest Value\": \"\"\"\n",
        "            How can you find the Nth highest value in a column?\n",
        "\n",
        "            Multiple approaches to find the Nth highest value:\n",
        "\n",
        "            Method 1 - Using DENSE_RANK() (Recommended):\n",
        "            SELECT salary\n",
        "            FROM (\n",
        "                SELECT salary, DENSE_RANK() OVER (ORDER BY salary DESC) AS rnk\n",
        "                FROM employees\n",
        "            ) ranked\n",
        "            WHERE rnk = 3;  -- This gives the 3rd highest salary\n",
        "\n",
        "            Method 2 - Using LIMIT/OFFSET (MySQL, PostgreSQL):\n",
        "            SELECT DISTINCT salary\n",
        "            FROM employees\n",
        "            ORDER BY salary DESC\n",
        "            LIMIT 1 OFFSET 2;  -- 3rd highest (0-indexed)\n",
        "\n",
        "            Method 3 - Using ROW_NUMBER():\n",
        "            SELECT salary\n",
        "            FROM (\n",
        "                SELECT DISTINCT salary,\n",
        "                       ROW_NUMBER() OVER (ORDER BY salary DESC) as rn\n",
        "                FROM employees\n",
        "            ) t\n",
        "            WHERE rn = 3;\n",
        "\n",
        "            Key considerations:\n",
        "            - DENSE_RANK() handles ties better than ROW_NUMBER()\n",
        "            - Use DISTINCT to avoid counting duplicate salary values\n",
        "            - Different databases have slightly different syntax\n",
        "            \"\"\",\n",
        "\n",
        "            \"Database Indexes\": \"\"\"\n",
        "            What are indexes and how do they affect performance?\n",
        "\n",
        "            Indexes are database objects that speed up data retrieval operations.\n",
        "            Think of them like an index in a book - they help find data quickly.\n",
        "\n",
        "            Performance Effects:\n",
        "            ✅ Speed up SELECT queries (faster reads)\n",
        "            ✅ Speed up WHERE, ORDER BY, JOIN operations\n",
        "            ✅ Speed up sorting and grouping operations\n",
        "            ❌ Slow down INSERT, UPDATE, DELETE (slower writes)\n",
        "            ❌ Require additional storage space\n",
        "            ❌ Need maintenance overhead\n",
        "\n",
        "            Common Index Types:\n",
        "            - B-tree: Most common, good for range queries and sorting\n",
        "            - Hash: Very fast for exact matches, not good for ranges\n",
        "            - Full-text: Specialized for text search operations\n",
        "            - Bitmap: Good for low-cardinality data\n",
        "\n",
        "            When to use indexes:\n",
        "            - Columns frequently used in WHERE clauses\n",
        "            - Columns used in JOIN conditions\n",
        "            - Columns used in ORDER BY clauses\n",
        "            - Foreign key columns\n",
        "\n",
        "            When NOT to use indexes:\n",
        "            - Tables with frequent INSERT/UPDATE/DELETE operations\n",
        "            - Very small tables (overhead not worth it)\n",
        "            - Columns that change frequently\n",
        "            \"\"\",\n",
        "\n",
        "            \"Correlated Subqueries\": \"\"\"\n",
        "            What is a correlated subquery and how is it different from a regular subquery?\n",
        "\n",
        "            Regular Subquery:\n",
        "            - Runs independently of the outer query\n",
        "            - Executes once and returns a result\n",
        "            - Can be executed separately from the outer query\n",
        "            - Generally more efficient\n",
        "\n",
        "            Correlated Subquery:\n",
        "            - References columns from the outer query\n",
        "            - Executes once for each row in the outer query\n",
        "            - Cannot be executed independently\n",
        "            - Often less efficient for large datasets\n",
        "\n",
        "            Regular Subquery Example:\n",
        "            SELECT name FROM employees\n",
        "            WHERE salary > (SELECT AVG(salary) FROM employees);\n",
        "\n",
        "            Correlated Subquery Example:\n",
        "            SELECT name, salary\n",
        "            FROM employees e1\n",
        "            WHERE salary > (\n",
        "                SELECT AVG(salary)\n",
        "                FROM employees e2\n",
        "                WHERE e2.department = e1.department  -- References outer query\n",
        "            );\n",
        "\n",
        "            In the correlated example, the subquery runs once for each employee,\n",
        "            comparing their salary to the average of their specific department.\n",
        "\n",
        "            Performance Considerations:\n",
        "            - Regular subqueries are generally faster\n",
        "            - Correlated subqueries can be expensive for large datasets\n",
        "            - Consider using JOINs or window functions as alternatives\n",
        "            \"\"\",\n",
        "\n",
        "            \"CASE Statements\": \"\"\"\n",
        "            When would you use a CASE statement in SQL?\n",
        "\n",
        "            A CASE statement is used for conditional logic, like if-else in programming.\n",
        "\n",
        "            Two types of CASE statements:\n",
        "\n",
        "            1. Searched CASE (uses conditions):\n",
        "            SELECT name,\n",
        "                CASE\n",
        "                    WHEN salary >= 100000 THEN 'High'\n",
        "                    WHEN salary >= 50000 THEN 'Medium'\n",
        "                    ELSE 'Low'\n",
        "                END AS salary_band\n",
        "            FROM employees;\n",
        "\n",
        "            2. Simple CASE (compares to specific values):\n",
        "            SELECT name,\n",
        "                CASE department\n",
        "                    WHEN 'IT' THEN 'Technology'\n",
        "                    WHEN 'HR' THEN 'Human Resources'\n",
        "                    WHEN 'FIN' THEN 'Finance'\n",
        "                    ELSE 'Other'\n",
        "                END AS dept_category\n",
        "            FROM employees;\n",
        "\n",
        "            Common Use Cases:\n",
        "            - Creating categories from continuous data\n",
        "            - Conditional aggregations\n",
        "            - Data transformation and cleansing\n",
        "            - Custom sorting logic\n",
        "            - Pivot-like operations\n",
        "            - Handling NULL values conditionally\n",
        "\n",
        "            It's useful for creating new labels or categories from existing data\n",
        "            without needing separate lookup tables.\n",
        "            \"\"\",\n",
        "\n",
        "            \"Duplicate Handling\": \"\"\"\n",
        "            How do you detect and remove duplicates from a table while keeping only one record?\n",
        "\n",
        "            Detecting Duplicates:\n",
        "            SELECT name, email, COUNT(*) as duplicate_count\n",
        "            FROM customers\n",
        "            GROUP BY name, email\n",
        "            HAVING COUNT(*) > 1;\n",
        "\n",
        "            Removing Duplicates (Multiple Methods):\n",
        "\n",
        "            Method 1 - Using MIN/MAX with subquery:\n",
        "            DELETE FROM customers\n",
        "            WHERE id NOT IN (\n",
        "                SELECT MIN(id)\n",
        "                FROM customers\n",
        "                GROUP BY name, email\n",
        "            );\n",
        "\n",
        "            Method 2 - Using ROW_NUMBER() window function:\n",
        "            DELETE FROM customers\n",
        "            WHERE id IN (\n",
        "                SELECT id FROM (\n",
        "                    SELECT id,\n",
        "                           ROW_NUMBER() OVER (\n",
        "                               PARTITION BY name, email\n",
        "                               ORDER BY id\n",
        "                           ) as rn\n",
        "                    FROM customers\n",
        "                ) t\n",
        "                WHERE rn > 1\n",
        "            );\n",
        "\n",
        "            Method 3 - Using self-join:\n",
        "            DELETE c1 FROM customers c1\n",
        "            INNER JOIN customers c2\n",
        "            WHERE c1.id > c2.id\n",
        "            AND c1.name = c2.name\n",
        "            AND c1.email = c2.email;\n",
        "\n",
        "            Prevention Strategies:\n",
        "            - Use UNIQUE constraints on combinations of columns\n",
        "            - Use UPSERT operations (INSERT ... ON CONFLICT)\n",
        "            - Validate data before insertion\n",
        "            - Use primary keys effectively\n",
        "\n",
        "            This keeps only the row with the smallest ID for each unique combination.\n",
        "            \"\"\",\n",
        "\n",
        "            \"SQL Interview Tips\": \"\"\"\n",
        "            Final Tips for SQL Interview Success\n",
        "\n",
        "            Technical Preparation:\n",
        "            - Practice regularly using real datasets\n",
        "            - Understand performance implications of joins, subqueries, and indexing\n",
        "            - Be ready to explain your logic clearly, not just write queries\n",
        "            - Know the differences between database systems (MySQL, PostgreSQL, SQL Server)\n",
        "            - Practice with sample databases like Northwind or Sakila\n",
        "\n",
        "            During the Interview:\n",
        "            - Think out loud - explain your reasoning\n",
        "            - Ask clarifying questions about the requirements\n",
        "            - Start with a simple solution, then optimize\n",
        "            - Consider edge cases (NULL values, empty results)\n",
        "            - Discuss performance implications of your queries\n",
        "\n",
        "            Common Topics to Review:\n",
        "            - Window functions and their use cases\n",
        "            - Different types of JOINs and when to use each\n",
        "            - Subqueries vs CTEs vs JOINs performance\n",
        "            - Indexing strategies and trade-offs\n",
        "            - Normalization and denormalization\n",
        "            - Transaction concepts (ACID properties)\n",
        "\n",
        "            Practical Skills:\n",
        "            - Be able to write queries from scratch\n",
        "            - Debug and optimize existing queries\n",
        "            - Explain execution plans\n",
        "            - Handle data quality issues\n",
        "\n",
        "            SQL mastery is about more than syntax—it's about thinking through problems,\n",
        "            choosing efficient solutions, and understanding data at its core.\n",
        "\n",
        "            Remember: Employers want to see your problem-solving process, not just the final answer.\n",
        "            \"\"\"\n",
        "        }\n",
        "\n",
        "        # Convert to Document objects\n",
        "        documents = []\n",
        "        for topic, content in sql_content.items():\n",
        "            doc = Document(\n",
        "                page_content=content.strip(),\n",
        "                metadata={\n",
        "                    \"source\": \"sql_interview_prep.pdf\",\n",
        "                    \"topic\": topic,\n",
        "                    \"type\": \"interview_question\"\n",
        "                }\n",
        "            )\n",
        "            documents.append(doc)\n",
        "\n",
        "        return documents\n",
        "\n",
        "    async def build_vectorstore(self):\n",
        "        \"\"\"Build the vector store from documents\"\"\"\n",
        "        await cl.Message(content=\"📚 Loading SQL interview content...\").send()\n",
        "\n",
        "        # Load documents\n",
        "        documents = self.load_sql_interview_content()\n",
        "\n",
        "        # Split into chunks\n",
        "        text_splitter = RecursiveCharacterTextSplitter(\n",
        "            chunk_size=600,\n",
        "            chunk_overlap=50,\n",
        "            length_function=len,\n",
        "        )\n",
        "\n",
        "        chunks = text_splitter.split_documents(documents)\n",
        "\n",
        "        await cl.Message(content=f\"📄 Created {len(chunks)} content chunks\").send()\n",
        "        await cl.Message(content=\"🔧 Building vector store...\").send()\n",
        "\n",
        "        # Create vector store\n",
        "        self.vectorstore = FAISS.from_documents(chunks, self.embeddings)\n",
        "\n",
        "        await cl.Message(content=\"✅ Vector store ready!\").send()\n",
        "\n",
        "    def create_qa_chain(self):\n",
        "        \"\"\"Create the QA chain with a simple response system\"\"\"\n",
        "        retriever = self.vectorstore.as_retriever(\n",
        "            search_type=\"similarity\",\n",
        "            search_kwargs={\"k\": 3}\n",
        "        )\n",
        "\n",
        "        # Simple QA chain without complex LLM\n",
        "        class SimpleQAChain:\n",
        "            def __init__(self, retriever):\n",
        "                self.retriever = retriever\n",
        "\n",
        "            def __call__(self, inputs):\n",
        "                query = inputs[\"query\"]\n",
        "                docs = self.retriever.get_relevant_documents(query)\n",
        "\n",
        "                # Combine relevant content\n",
        "                context = \"\\n\\n\".join([doc.page_content for doc in docs])\n",
        "\n",
        "                # Generate a structured response\n",
        "                response = self.generate_response(query, context, docs)\n",
        "\n",
        "                return {\n",
        "                    \"result\": response,\n",
        "                    \"source_documents\": docs\n",
        "                }\n",
        "\n",
        "            def generate_response(self, query, context, docs):\n",
        "                \"\"\"Generate a structured response based on context\"\"\"\n",
        "\n",
        "                # Extract topics from retrieved docs\n",
        "                topics = [doc.metadata.get(\"topic\", \"Unknown\") for doc in docs]\n",
        "                main_topic = topics[0] if topics else \"SQL Concepts\"\n",
        "\n",
        "                response = f\"\"\"**{main_topic}**\n",
        "\n",
        "{context}\n",
        "\n",
        "---\n",
        "**Related Topics:** {', '.join(set(topics))}\n",
        "**Sources:** {len(docs)} relevant sections found\"\"\"\n",
        "\n",
        "                return response\n",
        "\n",
        "        self.qa_chain = SimpleQAChain(retriever)\n",
        "\n",
        "# Global chatbot instance\n",
        "chatbot = SQLRAGChatbot()\n",
        "\n",
        "@cl.on_chat_start\n",
        "async def start():\n",
        "    \"\"\"Initialize the chatbot when a new chat starts\"\"\"\n",
        "\n",
        "    # Welcome message\n",
        "    welcome_msg = \"\"\"# 🎯 SQL Interview Prep Assistant\n",
        "\n",
        "Welcome! I'm your AI assistant for SQL interview preparation. I have comprehensive knowledge from a SQL interview guide covering:\n",
        "\n",
        "## 📚 Topics I Can Help With:\n",
        "- **Basic Concepts**: WHERE vs HAVING, JOIN types\n",
        "- **Advanced Features**: Window functions, CTEs, Subqueries\n",
        "- **Performance**: Indexing, Query optimization\n",
        "- **Practical Skills**: Finding Nth highest values, Removing duplicates\n",
        "- **Interview Tips**: Best practices and common questions\n",
        "\n",
        "## 💡 Example Questions:\n",
        "- \"What's the difference between WHERE and HAVING?\"\n",
        "- \"How do window functions work?\"\n",
        "- \"Explain CTEs vs subqueries\"\n",
        "- \"How do I find the 3rd highest salary?\"\n",
        "- \"What are some SQL interview tips?\"\n",
        "\n",
        "---\n",
        "**Setting up the system...**\"\"\"\n",
        "\n",
        "    await cl.Message(content=welcome_msg).send()\n",
        "\n",
        "    try:\n",
        "        # Initialize components\n",
        "        await chatbot.setup_embeddings()\n",
        "        await chatbot.build_vectorstore()\n",
        "        chatbot.create_qa_chain()\n",
        "\n",
        "        ready_msg = \"\"\"✅ **System Ready!**\n",
        "\n",
        "🚀 You can now ask me any SQL interview questions. I'll provide detailed explanations with examples and best practices.\n",
        "\n",
        "What would you like to learn about?\"\"\"\n",
        "\n",
        "        await cl.Message(content=ready_msg).send()\n",
        "\n",
        "    except Exception as e:\n",
        "        error_msg = f\"❌ **Setup Error**: {str(e)}\\n\\nPlease check your environment and try again.\"\n",
        "        await cl.Message(content=error_msg).send()\n",
        "\n",
        "@cl.on_message\n",
        "async def main(message: cl.Message):\n",
        "    \"\"\"Handle incoming messages\"\"\"\n",
        "\n",
        "    user_question = message.content\n",
        "\n",
        "    # Add to conversation history\n",
        "    chatbot.conversation_history.append({\"type\": \"user\", \"content\": user_question})\n",
        "\n",
        "    try:\n",
        "        # Show thinking indicator\n",
        "        thinking_msg = cl.Message(content=\"🤔 Searching for relevant information...\")\n",
        "        await thinking_msg.send()\n",
        "\n",
        "        # Get response from QA chain\n",
        "        result = chatbot.qa_chain({\"query\": user_question})\n",
        "\n",
        "        # Update thinking message with response\n",
        "        await thinking_msg.update(content=result[\"result\"])\n",
        "\n",
        "        # Add source information\n",
        "        sources = result[\"source_documents\"]\n",
        "        if sources:\n",
        "            source_info = f\"\\n\\n📖 **Retrieved from {len(sources)} sections** of the SQL interview guide\"\n",
        "            await cl.Message(content=source_info).send()\n",
        "\n",
        "        # Add to conversation history\n",
        "        chatbot.conversation_history.append({\"type\": \"assistant\", \"content\": result[\"result\"]})\n",
        "\n",
        "        # Suggest related questions\n",
        "        if len(chatbot.conversation_history) <= 4:  # Only for first few interactions\n",
        "            suggestions = get_related_questions(user_question)\n",
        "            if suggestions:\n",
        "                suggestion_msg = f\"\"\"💡 **You might also ask:**\n",
        "{chr(10).join([f\"• {q}\" for q in suggestions])}\"\"\"\n",
        "                await cl.Message(content=suggestion_msg).send()\n",
        "\n",
        "    except Exception as e:\n",
        "        error_response = f\"\"\"❌ **Error**: I encountered an issue processing your question.\n",
        "\n",
        "**Error details**: {str(e)}\n",
        "\n",
        "Please try rephrasing your question or ask about a different SQL topic.\"\"\"\n",
        "\n",
        "        await cl.Message(content=error_response).send()\n",
        "\n",
        "def get_related_questions(user_question):\n",
        "    \"\"\"Get related questions based on user input\"\"\"\n",
        "    question_lower = user_question.lower()\n",
        "\n",
        "    if any(word in question_lower for word in [\"where\", \"having\"]):\n",
        "        return [\n",
        "            \"What are aggregate functions?\",\n",
        "            \"How do GROUP BY clauses work?\",\n",
        "            \"What's the difference between INNER and LEFT JOIN?\"\n",
        "        ]\n",
        "    elif any(word in question_lower for word in [\"window\", \"rank\", \"row_number\"]):\n",
        "        return [\n",
        "            \"What are CTEs and when should I use them?\",\n",
        "            \"How do I find the Nth highest value?\",\n",
        "            \"What's the difference between RANK and DENSE_RANK?\"\n",
        "        ]\n",
        "    elif any(word in question_lower for word in [\"cte\", \"with\"]):\n",
        "        return [\n",
        "            \"What are correlated subqueries?\",\n",
        "            \"When should I use subqueries vs JOINs?\",\n",
        "            \"How do recursive CTEs work?\"\n",
        "        ]\n",
        "    elif any(word in question_lower for word in [\"join\", \"inner\", \"left\"]):\n",
        "        return [\n",
        "            \"What are the different types of JOINs?\",\n",
        "            \"How do I optimize JOIN performance?\",\n",
        "            \"What's a self-join?\"\n",
        "        ]\n",
        "    elif any(word in question_lower for word in [\"index\", \"performance\"]):\n",
        "        return [\n",
        "            \"How do I optimize slow queries?\",\n",
        "            \"What are execution plans?\",\n",
        "            \"When should I avoid indexes?\"\n",
        "        ]\n",
        "    else:\n",
        "        return [\n",
        "            \"What are some common SQL interview mistakes?\",\n",
        "            \"How do I prepare for a technical SQL interview?\",\n",
        "            \"What are the most important SQL concepts to know?\"\n",
        "        ]\n",
        "\n",
        "# Custom CSS for better styling\n",
        "@cl.on_chat_start\n",
        "async def setup_ui():\n",
        "    \"\"\"Setup custom UI styling\"\"\"\n",
        "\n",
        "    await cl.Message(\n",
        "        content=\"\",\n",
        "        elements=[\n",
        "            cl.Text(\n",
        "                name=\"custom_css\",\n",
        "                content=\"\"\"\n",
        "                <style>\n",
        "                .message-content {\n",
        "                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n",
        "                }\n",
        "                .message-content code {\n",
        "                    background-color: #f4f4f4;\n",
        "                    padding: 2px 4px;\n",
        "                    border-radius: 3px;\n",
        "                    font-family: 'Courier New', monospace;\n",
        "                }\n",
        "                .message-content pre {\n",
        "                    background-color: #2d3748;\n",
        "                    color: #e2e8f0;\n",
        "                    padding: 12px;\n",
        "                    border-radius: 6px;\n",
        "                    overflow-x: auto;\n",
        "                }\n",
        "                </style>\n",
        "                \"\"\",\n",
        "                display=\"inline\"\n",
        "            )\n",
        "        ]\n",
        "    ).send()\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    # This would be run with: chainlit run app.py\n",
        "    pass"
      ],
      "metadata": {
        "id": "5zEi_SaPTWtN"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e9f394de"
      },
      "source": [
        "The `chainlit run` command needs to be run in the shell, not as a Python command. In Colab, you can do this by prefixing the command with `!`."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3215c101",
        "outputId": "c0a3f5bc-8a3f-461f-c452-613ca0706dd0"
      },
      "source": [
        "!chainlit run sql_chatbot.py"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Usage: chainlit run [OPTIONS] TARGET\n",
            "Try 'chainlit run --help' for help.\n",
            "\n",
            "Error: Invalid value: File does not exist: sql_chatbot.py\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "02bc2f89",
        "outputId": "2b30c1c1-d4dd-4fc6-8495-9e92374983b3"
      },
      "source": [
        "%%writefile sql_chatbot.py\n",
        "\"\"\"\n",
        "Chainlit SQL Interview Prep RAG Chatbot\n",
        "Beautiful web-based chatbot using your original PDF content\n",
        "\"\"\"\n",
        "\n",
        "import os\n",
        "import asyncio\n",
        "from typing import List, Dict, Optional\n",
        "import chainlit as cl\n",
        "from dotenv import load_dotenv\n",
        "from langchain.text_splitter import RecursiveCharacterTextSplitter\n",
        "from langchain_community.embeddings import HuggingFaceEmbeddings\n",
        "from langchain_community.vectorstores import FAISS\n",
        "from langchain_community.llms import HuggingFacePipeline\n",
        "from langchain.chains import RetrievalQA\n",
        "from langchain.schema import Document\n",
        "from langchain.callbacks.base import BaseCallbackHandler\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "# Load environment variables\n",
        "load_dotenv()\n",
        "\n",
        "class ChainlitCallbackHandler(BaseCallbackHandler):\n",
        "    \"\"\"Custom callback handler for Chainlit streaming\"\"\"\n",
        "\n",
        "    def __init__(self):\n",
        "        self.msg = None\n",
        "        self.content = \"\"\n",
        "\n",
        "    async def on_llm_start(self, serialized, prompts, **kwargs):\n",
        "        \"\"\"Called when LLM starts\"\"\"\n",
        "        self.msg = cl.Message(content=\"\")\n",
        "        await self.msg.send()\n",
        "\n",
        "    async def on_llm_new_token(self, token: str, **kwargs):\n",
        "        \"\"\"Called when a new token is generated\"\"\"\n",
        "        self.content += token\n",
        "        await self.msg.update()\n",
        "\n",
        "class SQLRAGChatbot:\n",
        "    def __init__(self):\n",
        "        \"\"\"Initialize the SQL RAG chatbot\"\"\"\n",
        "        self.vectorstore = None\n",
        "        self.qa_chain = None\n",
        "        self.embeddings = None\n",
        "        self.conversation_history = []\n",
        "\n",
        "    async def setup_embeddings(self):\n",
        "        \"\"\"Setup embedding model\"\"\"\n",
        "        await cl.Message(content=\"🔧 Loading embedding model...\").send()\n",
        "\n",
        "        self.embeddings = HuggingFaceEmbeddings(\n",
        "            model_name=\"sentence-transformers/all-MiniLM-L6-v2\",\n",
        "            model_kwargs={'device': 'cpu'},\n",
        "            encode_kwargs={'normalize_embeddings': True}\n",
        "        )\n",
        "\n",
        "        await cl.Message(content=\"✅ Embeddings ready!\").send()\n",
        "\n",
        "    def load_sql_interview_content(self) -> List[Document]:\n",
        "        \"\"\"Load the SQL interview content from your original PDF\"\"\"\n",
        "\n",
        "        # Content extracted from your original PDF\n",
        "        sql_content = {\n",
        "            \"WHERE vs HAVING\": \"\"\"\n",
        "            What is the difference between WHERE and HAVING?\n",
        "\n",
        "            WHERE filters rows before aggregation.\n",
        "            HAVING filters groups after aggregation.\n",
        "\n",
        "            Example:\n",
        "            SELECT department, COUNT(*)\n",
        "            FROM employees\n",
        "            WHERE status = 'active'\n",
        "            GROUP BY department\n",
        "            HAVING COUNT(*) > 5;\n",
        "\n",
        "            Key differences:\n",
        "            - WHERE is applied to individual rows before any grouping\n",
        "            - HAVING is applied to grouped rows after GROUP BY\n",
        "            - WHERE cannot use aggregate functions like COUNT(), SUM()\n",
        "            - HAVING can use aggregate functions\n",
        "            \"\"\",\n",
        "\n",
        "            \"Window Functions\": \"\"\"\n",
        "            Explain the use of ROW_NUMBER(), RANK(), and DENSE_RANK().\n",
        "\n",
        "            These are window functions used for ranking rows:\n",
        "\n",
        "            ROW_NUMBER(): Unique row numbers even if values are the same.\n",
        "            - Always assigns sequential numbers: 1, 2, 3, 4...\n",
        "\n",
        "            RANK(): Gives the same rank to ties, but skips the next rank(s).\n",
        "            - With ties: 1, 2, 2, 4...\n",
        "\n",
        "            DENSE_RANK(): Gives the same rank to ties without skipping ranks.\n",
        "            - With ties: 1, 2, 2, 3...\n",
        "\n",
        "            Example:\n",
        "            SELECT name, salary,\n",
        "                ROW_NUMBER() OVER (ORDER BY salary DESC) as row_num,\n",
        "                RANK() OVER (ORDER BY salary DESC) as rank_val,\n",
        "                DENSE_RANK() OVER (ORDER BY salary DESC) as dense_rank_val\n",
        "            FROM employees;\n",
        "            \"\"\",\n",
        "\n",
        "            \"CTEs vs Subqueries\": \"\"\"\n",
        "            What is a CTE and how is it different from a subquery?\n",
        "\n",
        "            A Common Table Expression (CTE) is a temporary result set defined using WITH.\n",
        "\n",
        "            CTEs vs Subqueries:\n",
        "            - CTEs are more readable and can be reused within the same query\n",
        "            - Subqueries are nested inside the main query and not reusable\n",
        "            - CTEs can be recursive\n",
        "            - CTEs appear at the beginning of the query\n",
        "\n",
        "            CTE Example:\n",
        "            WITH active_customers AS (\n",
        "                SELECT * FROM customers WHERE status = 'active'\n",
        "            )\n",
        "            SELECT city, COUNT(*) FROM active_customers GROUP BY city;\n",
        "\n",
        "            Subquery Example:\n",
        "            SELECT city, COUNT(*)\n",
        "            FROM (SELECT * FROM customers WHERE status = 'active') subq\n",
        "            GROUP BY city;\n",
        "            \"\"\",\n",
        "\n",
        "            \"JOIN Types\": \"\"\"\n",
        "            How does a LEFT JOIN differ from an INNER JOIN?\n",
        "\n",
        "            INNER JOIN: Returns only matching rows from both tables.\n",
        "            - Only includes records where the join condition is met in both tables\n",
        "            - Smaller result set\n",
        "\n",
        "            LEFT JOIN: Returns all rows from the left table and matching rows from the right.\n",
        "            - Includes all records from the left table\n",
        "            - Shows NULL for unmatched records from the right table\n",
        "            - Also called LEFT OUTER JOIN\n",
        "\n",
        "            Example:\n",
        "            -- INNER JOIN (only employees with departments)\n",
        "            SELECT e.name, d.department_name\n",
        "            FROM employees e\n",
        "            INNER JOIN departments d ON e.dept_id = d.dept_id;\n",
        "\n",
        "            -- LEFT JOIN (all employees, even without departments)\n",
        "            SELECT e.name, d.department_name\n",
        "            FROM employees e\n",
        "            LEFT JOIN departments d ON e.dept_id = d.dept_id;\n",
        "            \"\"\",\n",
        "\n",
        "            \"UNION Operations\": \"\"\"\n",
        "            What is the difference between UNION and UNION ALL?\n",
        "\n",
        "            UNION: Removes duplicates.\n",
        "            - Performs automatic deduplication\n",
        "            - Slower execution due to duplicate checking\n",
        "            - Returns unique rows only\n",
        "\n",
        "            UNION ALL: Keeps duplicates.\n",
        "            - No deduplication performed\n",
        "            - Faster execution\n",
        "            - Returns all rows including duplicates\n",
        "\n",
        "            Example:\n",
        "            -- UNION (removes duplicates)\n",
        "            SELECT city FROM customers\n",
        "            UNION\n",
        "            SELECT city FROM suppliers;\n",
        "\n",
        "            -- UNION ALL (keeps duplicates)\n",
        "            SELECT city FROM customers\n",
        "            UNION ALL\n",
        "            SELECT city FROM suppliers;\n",
        "\n",
        "            Use UNION when you need unique results.\n",
        "            Use UNION ALL when performance matters and duplicates are acceptable.\n",
        "            \"\"\",\n",
        "\n",
        "            \"Nth Highest Value\": \"\"\"\n",
        "            How can you find the Nth highest value in a column?\n",
        "\n",
        "            Multiple approaches to find the Nth highest value:\n",
        "\n",
        "            Method 1 - Using DENSE_RANK() (Recommended):\n",
        "            SELECT salary\n",
        "            FROM (\n",
        "                SELECT salary, DENSE_RANK() OVER (ORDER BY salary DESC) AS rnk\n",
        "                FROM employees\n",
        "            ) ranked\n",
        "            WHERE rnk = 3;  -- This gives the 3rd highest salary\n",
        "\n",
        "            Method 2 - Using LIMIT/OFFSET (MySQL, PostgreSQL):\n",
        "            SELECT DISTINCT salary\n",
        "            FROM employees\n",
        "            ORDER BY salary DESC\n",
        "            LIMIT 1 OFFSET 2;  -- 3rd highest (0-indexed)\n",
        "\n",
        "            Method 3 - Using ROW_NUMBER():\n",
        "            SELECT salary\n",
        "            FROM (\n",
        "                SELECT DISTINCT salary,\n",
        "                       ROW_NUMBER() OVER (ORDER BY salary DESC) as rn\n",
        "                FROM employees\n",
        "            ) t\n",
        "                WHERE rn = 3;\n",
        "\n",
        "            Key considerations:\n",
        "            - DENSE_RANK() handles ties better than ROW_NUMBER()\n",
        "            - Use DISTINCT to avoid counting duplicate salary values\n",
        "            - Different databases have slightly different syntax\n",
        "            \"\"\",\n",
        "\n",
        "            \"Database Indexes\": \"\"\"\n",
        "            What are indexes and how do they affect performance?\n",
        "\n",
        "            Indexes are database objects that speed up data retrieval operations.\n",
        "            Think of them like an index in a book - they help find data quickly.\n",
        "\n",
        "            Performance Effects:\n",
        "            ✅ Speed up SELECT queries (faster reads)\n",
        "            ✅ Speed up WHERE, ORDER BY, JOIN operations\n",
        "            ✅ Speed up sorting and grouping operations\n",
        "            ❌ Slow down INSERT, UPDATE, DELETE (slower writes)\n",
        "            ❌ Require additional storage space\n",
        "            ❌ Need maintenance overhead\n",
        "\n",
        "            Common Index Types:\n",
        "            - B-tree: Most common, good for range queries and sorting\n",
        "            - Hash: Very fast for exact matches, not good for ranges\n",
        "            - Full-text: Specialized for text search operations\n",
        "            - Bitmap: Good for low-cardinality data\n",
        "\n",
        "            When to use indexes:\n",
        "            - Columns frequently used in WHERE clauses\n",
        "            - Columns used in JOIN conditions\n",
        "            - Columns used in ORDER BY clauses\n",
        "            - Foreign key columns\n",
        "\n",
        "            When NOT to use indexes:\n",
        "            - Tables with frequent INSERT/UPDATE/DELETE operations\n",
        "            - Very small tables (overhead not worth it)\n",
        "            - Columns that change frequently\n",
        "            \"\"\",\n",
        "\n",
        "            \"Correlated Subqueries\": \"\"\"\n",
        "            What is a correlated subquery and how is it different from a regular subquery?\n",
        "\n",
        "            Regular Subquery:\n",
        "            - Runs independently of the outer query\n",
        "            - Executes once and returns a result\n",
        "            - Can be executed separately from the outer query\n",
        "            - Generally more efficient\n",
        "\n",
        "            Correlated Subquery:\n",
        "            - References columns from the outer query\n",
        "            - Executes once for each row in the outer query\n",
        "            - Cannot be executed independently\n",
        "            - Often less efficient for large datasets\n",
        "\n",
        "            Regular Subquery Example:\n",
        "            SELECT name FROM employees\n",
        "            WHERE salary > (SELECT AVG(salary) FROM employees);\n",
        "\n",
        "            Correlated Subquery Example:\n",
        "            SELECT name, salary\n",
        "            FROM employees e1\n",
        "            WHERE salary > (\n",
        "                SELECT AVG(salary)\n",
        "                FROM employees e2\n",
        "                WHERE e2.department = e1.department  -- References outer query\n",
        "            );\n",
        "\n",
        "            In the correlated example, the subquery runs once for each employee,\n",
        "            comparing their salary to the average of their specific department.\n",
        "\n",
        "            Performance Considerations:\n",
        "            - Regular subqueries are generally faster\n",
        "            - Correlated subqueries can be expensive for large datasets\n",
        "            - Consider using JOINs or window functions as alternatives\n",
        "            \"\"\",\n",
        "\n",
        "            \"CASE Statements\": \"\"\"\n",
        "            When would you use a CASE statement in SQL?\n",
        "\n",
        "            A CASE statement is used for conditional logic, like if-else in programming.\n",
        "\n",
        "            Two types of CASE statements:\n",
        "\n",
        "            1. Searched CASE (uses conditions):\n",
        "            SELECT name,\n",
        "                CASE\n",
        "                    WHEN salary >= 100000 THEN 'High'\n",
        "                    WHEN salary >= 50000 THEN 'Medium'\n",
        "                    ELSE 'Low'\n",
        "                END AS salary_band\n",
        "            FROM employees;\n",
        "\n",
        "            2. Simple CASE (compares to specific values):\n",
        "            SELECT name,\n",
        "                CASE department\n",
        "                    WHEN 'IT' THEN 'Technology'\n",
        "                    WHEN 'HR' THEN 'Human Resources'\n",
        "                    WHEN 'FIN' THEN 'Finance'\n",
        "                    ELSE 'Other'\n",
        "                END AS dept_category\n",
        "            FROM employees;\n",
        "\n",
        "            Common Use Cases:\n",
        "            - Creating categories from continuous data\n",
        "            - Conditional aggregations\n",
        "            - Data transformation and cleansing\n",
        "            - Custom sorting logic\n",
        "            - Pivot-like operations\n",
        "            - Handling NULL values conditionally\n",
        "\n",
        "            It's useful for creating new labels or categories from existing data\n",
        "            without needing separate lookup tables.\n",
        "            \"\"\",\n",
        "\n",
        "            \"Duplicate Handling\": \"\"\"\n",
        "            How do you detect and remove duplicates from a table while keeping only one record?\n",
        "\n",
        "            Detecting Duplicates:\n",
        "            SELECT name, email, COUNT(*) as duplicate_count\n",
        "            FROM customers\n",
        "            GROUP BY name, email\n",
        "            HAVING COUNT(*) > 1;\n",
        "\n",
        "            Removing Duplicates (Multiple Methods):\n",
        "\n",
        "            Method 1 - Using MIN/MAX with subquery:\n",
        "            DELETE FROM customers\n",
        "            WHERE id NOT IN (\n",
        "                SELECT MIN(id)\n",
        "                FROM customers\n",
        "                GROUP BY name, email\n",
        "            );\n",
        "\n",
        "            Method 2 - Using ROW_NUMBER() window function:\n",
        "            DELETE FROM customers\n",
        "            WHERE id IN (\n",
        "                SELECT id FROM (\n",
        "                    SELECT id,\n",
        "                           ROW_NUMBER() OVER (\n",
        "                               PARTITION BY name, email\n",
        "                               ORDER BY id\n",
        "                           ) as rn\n",
        "                    FROM customers\n",
        "                ) t\n",
        "                WHERE rn > 1\n",
        "            );\n",
        "\n",
        "            Method 3 - Using self-join:\n",
        "            DELETE c1 FROM customers c1\n",
        "            INNER JOIN customers c2\n",
        "            WHERE c1.id > c2.id\n",
        "            AND c1.name = c2.name\n",
        "            AND c1.email = c2.email;\n",
        "\n",
        "            Prevention Strategies:\n",
        "            - Use UNIQUE constraints on combinations of columns\n",
        "            - Use UPSERT operations (INSERT ... ON CONFLICT)\n",
        "            - Validate data before insertion\n",
        "            - Use primary keys effectively\n",
        "\n",
        "            This keeps only the row with the smallest ID for each unique combination.\n",
        "            \"\"\",\n",
        "\n",
        "            \"SQL Interview Tips\": \"\"\"\n",
        "            Final Tips for SQL Interview Success\n",
        "\n",
        "            Technical Preparation:\n",
        "            - Practice regularly using real datasets\n",
        "            - Understand performance implications of joins, subqueries, and indexing\n",
        "            - Be ready to explain your logic clearly, not just write queries\n",
        "            - Know the differences between database systems (MySQL, PostgreSQL, SQL Server)\n",
        "            - Practice with sample databases like Northwind or Sakila\n",
        "\n",
        "            During the Interview:\n",
        "            - Think out loud - explain your reasoning\n",
        "            - Ask clarifying questions about the requirements\n",
        "            - Start with a simple solution, then optimize\n",
        "            - Consider edge cases (NULL values, empty results)\n",
        "            - Discuss performance implications of your queries\n",
        "\n",
        "            Common Topics to Review:\n",
        "            - Window functions and their use cases\n",
        "            - Different types of JOINs and when to use each\n",
        "            - Subqueries vs CTEs vs JOINs performance\n",
        "            - Indexing strategies and trade-offs\n",
        "            - Normalization and denormalization\n",
        "            - Transaction concepts (ACID properties)\n",
        "\n",
        "            Practical Skills:\n",
        "            - Be able to write queries from scratch\n",
        "            - Debug and optimize existing queries\n",
        "            - Explain execution plans\n",
        "            - Handle data quality issues\n",
        "\n",
        "            SQL mastery is about more than syntax—it's about thinking through problems,\n",
        "            choosing efficient solutions, and understanding data at its core.\n",
        "\n",
        "            Remember: Employers want to see your problem-solving process, not just the final answer.\n",
        "            \"\"\"\n",
        "        }\n",
        "\n",
        "        # Convert to Document objects\n",
        "        documents = []\n",
        "        for topic, content in sql_content.items():\n",
        "            doc = Document(\n",
        "                page_content=content.strip(),\n",
        "                metadata={\n",
        "                    \"source\": \"sql_interview_prep.pdf\",\n",
        "                    \"topic\": topic,\n",
        "                    \"type\": \"interview_question\"\n",
        "                }\n",
        "            )\n",
        "            documents.append(doc)\n",
        "\n",
        "        return documents\n",
        "\n",
        "    async def build_vectorstore(self):\n",
        "        \"\"\"Build the vector store from documents\"\"\"\n",
        "        await cl.Message(content=\"📚 Loading SQL interview content...\").send()\n",
        "\n",
        "        # Load documents\n",
        "        documents = self.load_sql_interview_content()\n",
        "\n",
        "        # Split into chunks\n",
        "        text_splitter = RecursiveCharacterTextSplitter(\n",
        "            chunk_size=600,\n",
        "            chunk_overlap=50,\n",
        "            length_function=len,\n",
        "        )\n",
        "\n",
        "        chunks = text_splitter.split_documents(documents)\n",
        "\n",
        "        await cl.Message(content=f\"📄 Created {len(chunks)} content chunks\").send()\n",
        "        await cl.Message(content=\"🔧 Building vector store...\").send()\n",
        "\n",
        "        # Create vector store\n",
        "        self.vectorstore = FAISS.from_documents(chunks, self.embeddings)\n",
        "\n",
        "        await cl.Message(content=\"✅ Vector store ready!\").send()\n",
        "\n",
        "    def create_qa_chain(self):\n",
        "        \"\"\"Create the QA chain with a simple response system\"\"\"\n",
        "        retriever = self.vectorstore.as_retriever(\n",
        "            search_type=\"similarity\",\n",
        "            search_kwargs={\"k\": 3}\n",
        "        )\n",
        "\n",
        "        # Simple QA chain without complex LLM\n",
        "        class SimpleQAChain:\n",
        "            def __init__(self, retriever):\n",
        "                self.retriever = retriever\n",
        "\n",
        "            def __call__(self, inputs):\n",
        "                query = inputs[\"query\"]\n",
        "                docs = self.retriever.get_relevant_documents(query)\n",
        "\n",
        "                # Combine relevant content\n",
        "                context = \"\\n\\n\".join([doc.page_content for doc in docs])\n",
        "\n",
        "                # Generate a structured response\n",
        "                response = self.generate_response(query, context, docs)\n",
        "\n",
        "                return {\n",
        "                    \"result\": response,\n",
        "                    \"source_documents\": docs\n",
        "                }\n",
        "\n",
        "            def generate_response(self, query, context, docs):\n",
        "                \"\"\"Generate a structured response based on context\"\"\"\n",
        "\n",
        "                # Extract topics from retrieved docs\n",
        "                topics = [doc.metadata.get(\"topic\", \"Unknown\") for doc in docs]\n",
        "                main_topic = topics[0] if topics else \"SQL Concepts\"\n",
        "\n",
        "                response = f\"\"\"**{main_topic}**\n",
        "\n",
        "{context}\n",
        "\n",
        "---\n",
        "**Related Topics:** {', '.join(set(topics))}\n",
        "**Sources:** {len(docs)} relevant sections found\"\"\"\n",
        "\n",
        "                return response\n",
        "\n",
        "\n",
        "        self.qa_chain = SimpleQAChain(retriever)\n",
        "\n",
        "# Global chatbot instance\n",
        "chatbot = SQLRAGChatbot()\n",
        "\n",
        "@cl.on_chat_start\n",
        "async def start():\n",
        "    \"\"\"Initialize the chatbot when a new chat starts\"\"\"\n",
        "\n",
        "    # Welcome message\n",
        "    welcome_msg = \"\"\"# 🎯 SQL Interview Prep Assistant\n",
        "\n",
        "Welcome! I'm your AI assistant for SQL interview preparation. I have comprehensive knowledge from a SQL interview guide covering:\n",
        "\n",
        "## 📚 Topics I Can Help With:\n",
        "- **Basic Concepts**: WHERE vs HAVING, JOIN types\n",
        "- **Advanced Features**: Window functions, CTEs, Subqueries\n",
        "- **Performance**: Indexing, Query optimization\n",
        "- **Practical Skills**: Finding Nth highest values, Removing duplicates\n",
        "- **Interview Tips**: Best practices and common questions\n",
        "\n",
        "## 💡 Example Questions:\n",
        "- \"What's the difference between WHERE and HAVING?\"\n",
        "- \"How do window functions work?\"\n",
        "- \"Explain CTEs vs subqueries\"\n",
        "- \"How do I find the 3rd highest salary?\"\n",
        "- \"What are some SQL interview tips?\"\n",
        "\n",
        "---\n",
        "**Setting up the system...**\"\"\"\n",
        "\n",
        "    await cl.Message(content=welcome_msg).send()\n",
        "\n",
        "    try:\n",
        "        # Initialize components\n",
        "        await chatbot.setup_embeddings()\n",
        "        await chatbot.build_vectorstore()\n",
        "        chatbot.create_qa_chain()\n",
        "\n",
        "        ready_msg = \"\"\"✅ **System Ready!**\n",
        "\n",
        "🚀 You can now ask me any SQL interview questions. I'll provide detailed explanations with examples and best practices.\n",
        "\n",
        "What would you like to learn about?\"\"\"\n",
        "\n",
        "        await cl.Message(content=ready_msg).send()\n",
        "\n",
        "    except Exception as e:\n",
        "        error_msg = f\"❌ **Setup Error**: {str(e)}\\n\\nPlease check your environment and try again.\"\n",
        "        await cl.Message(content=error_msg).send()\n",
        "\n",
        "@cl.on_message\n",
        "async def main(message: cl.Message):\n",
        "    \"\"\"Handle incoming messages\"\"\"\n",
        "\n",
        "    user_question = message.content\n",
        "\n",
        "    # Add to conversation history\n",
        "    chatbot.conversation_history.append({\"type\": \"user\", \"content\": user_question})\n",
        "\n",
        "    try:\n",
        "        # Show thinking indicator\n",
        "        thinking_msg = cl.Message(content=\"🤔 Searching for relevant information...\")\n",
        "        await thinking_msg.send()\n",
        "\n",
        "        # Get response from QA chain\n",
        "        result = chatbot.qa_chain({\"query\": user_question})\n",
        "\n",
        "        # Update thinking message with response\n",
        "        await thinking_msg.update(content=result[\"result\"])\n",
        "\n",
        "        # Add source information\n",
        "        sources = result[\"source_documents\"]\n",
        "        if sources:\n",
        "            source_info = f\"\\n\\n📖 **Retrieved from {len(sources)} sections** of the SQL interview guide\"\n",
        "            await cl.Message(content=source_info).send()\n",
        "\n",
        "        # Add to conversation history\n",
        "        chatbot.conversation_history.append({\"type\": \"assistant\", \"content\": result[\"result\"]})\n",
        "\n",
        "        # Suggest related questions\n",
        "        if len(chatbot.conversation_history) <= 4:  # Only for first few interactions\n",
        "            suggestions = get_related_questions(user_question)\n",
        "            if suggestions:\n",
        "                suggestion_msg = f\"\"\"💡 **You might also ask:**\n",
        "{chr(10).join([f\"• {q}\" for q in suggestions])}\"\"\"\n",
        "                await cl.Message(content=suggestion_msg).send()\n",
        "\n",
        "    except Exception as e:\n",
        "        error_response = f\"\"\"❌ **Error**: I encountered an issue processing your question.\n",
        "\n",
        "**Error details**: {str(e)}\n",
        "\n",
        "Please try rephrasing your question or ask about a different SQL topic.\"\"\"\n",
        "\n",
        "        await cl.Message(content=error_response).send()\n",
        "\n",
        "\n",
        "def get_related_questions(user_question):\n",
        "    \"\"\"Get related questions based on user input\"\"\"\n",
        "    question_lower = user_question.lower()\n",
        "\n",
        "    if any(word in question_lower for word in [\"where\", \"having\"]):\n",
        "        return [\n",
        "            \"What are aggregate functions?\",\n",
        "            \"How do GROUP BY clauses work?\",\n",
        "            \"What's the difference between INNER and LEFT JOIN?\"\n",
        "        ]\n",
        "    elif any(word in question_lower for word in [\"window\", \"rank\", \"row_number\"]):\n",
        "        return [\n",
        "            \"What are CTEs and when should I use them?\",\n",
        "            \"How do I find the Nth highest value?\",\n",
        "            \"What's the difference between RANK and DENSE_RANK?\"\n",
        "        ]\n",
        "    elif any(word in question_lower for word in [\"cte\", \"with\"]):\n",
        "        return [\n",
        "            \"What are correlated subqueries?\",\n",
        "            \"When should I use subqueries vs JOINs?\",\n",
        "            \"How do recursive CTEs work?\"\n",
        "        ]\n",
        "    elif any(word in question_lower for word in [\"join\", \"inner\", \"left\"]):\n",
        "        return [\n",
        "            \"What are the different types of JOINs?\",\n",
        "            \"How do I optimize JOIN performance?\",\n",
        "            \"What's a self-join?\"\n",
        "        ]\n",
        "    elif any(word in question_lower for word in [\"index\", \"performance\"]):\n",
        "        return [\n",
        "            \"How do I optimize slow queries?\",\n",
        "            \"What are execution plans?\",\n",
        "            \"When should I avoid indexes?\"\n",
        "        ]\n",
        "    else:\n",
        "        return [\n",
        "            \"What are some common SQL interview mistakes?\",\n",
        "            \"How do I prepare for a technical SQL interview?\",\n",
        "            \"What are the most important SQL concepts to know?\"\n",
        "        ]\n",
        "\n",
        "# Custom CSS for better styling\n",
        "@cl.on_chat_start\n",
        "async def setup_ui():\n",
        "    \"\"\"Setup custom UI styling\"\"\"\n",
        "\n",
        "    await cl.Message(\n",
        "        content=\"\",\n",
        "        elements=[\n",
        "            cl.Text(\n",
        "                name=\"custom_css\",\n",
        "                content=\"\"\"\n",
        "                <style>\n",
        "                .message-content {\n",
        "                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n",
        "                }\n",
        "                .message-content code {\n",
        "                    background-color: #f4f4f4;\n",
        "                    padding: 2px 4px;\n",
        "                    border-radius: 3px;\n",
        "                    font-family: 'Courier New', monospace;\n",
        "                }\n",
        "                .message-content pre {\n",
        "                    background-color: #2d3748;\n",
        "                    color: #e2e8f0;\n",
        "                    padding: 12px;\n",
        "                    border-radius: 6px;\n",
        "                    overflow-x: auto;\n",
        "                }\n",
        "                </style>\n",
        "                \"\"\",\n",
        "                display=\"inline\"\n",
        "            )\n",
        "        ]\n",
        "    ).send()\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    # This would be run with: chainlit run app.py\n",
        "    pass"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Writing sql_chatbot.py\n"
          ]
        }
      ]
    },
    {
      "source": [
        "!chainlit run sql_chatbot.py"
      ],
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UA7aVQU5YEVw",
        "outputId": "f090b8a5-e7ef-4559-81e9-a673d39030c2"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2025-08-15 20:50:10 - Your app is available at http://localhost:8000\n",
            "\n",
            "Aborted!\n"
          ]
        }
      ]
    }
  ]
}